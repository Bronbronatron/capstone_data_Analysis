<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='2005' caption='From Year' datatype='integer' name='[Value One (copy)]' param-domain-type='list' role='measure' type='quantitative' value='2005'>
        <calculation class='tableau' formula='2005' />
        <aliases>
          <alias key='2000' value='2000' />
          <alias key='2005' value='2005' />
          <alias key='2010' value='2010' />
        </aliases>
        <members>
          <member alias='2000' value='2000' />
          <member alias='2005' value='2005' />
          <member alias='2010' value='2010' />
        </members>
      </column>
      <column alias='2014' caption='To Year' datatype='integer' name='[Year 2014 Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
        <calculation class='tableau' formula='2014' />
        <aliases>
          <alias key='2005' value='2005' />
          <alias key='2010' value='2010' />
          <alias key='2014' value='2014' />
        </aliases>
        <members>
          <member alias='2005' value='2005' />
          <member alias='2010' value='2010' />
          <member alias='2014' value='2014' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_15_cleaned' inline='true' name='federated.0chyfjt0mjr1lq1eq1crt0stdwou' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_15_cleaned' name='textscan.00qu48s1s0fu1g16orreq008pi5b'>
            <connection class='textscan' directory='C:/Users/bronw/OneDrive/Desktop/cleaned_tables' filename='df_15_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00qu48s1s0fu1g16orreq008pi5b' name='df_15_cleaned.csv' table='[df_15_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='integer' name='Geo_code' ordinal='2' />
            <column datatype='string' name='Country/region' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Value' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.00qu48s1s0fu1g16orreq008pi5b' name='df_15_cleaned.csv' table='[df_15_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='string' name='Code' ordinal='0' />
              <column datatype='string' name='Description' ordinal='1' />
              <column datatype='integer' name='Geo_code' ordinal='2' />
              <column datatype='string' name='Country/region' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='real' name='Value' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.00qu48s1s0fu1g16orreq008pi5b' name='population_cleaned.csv' table='[population_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='string' name='Country/region' ordinal='0' />
              <column datatype='integer' name='Population (2020)' ordinal='1' />
              <column datatype='real' name='Yearly Change' ordinal='2' />
              <column datatype='integer' name='Net Change' ordinal='3' />
              <column datatype='integer' name='Density (P/Km²)' ordinal='4' />
              <column datatype='integer' name='Land Area (Km²)' ordinal='5' />
              <column datatype='integer' name='Migrants (net)' ordinal='6' />
              <column datatype='real' name='Fert. Rate' ordinal='7' />
              <column datatype='integer' name='Med. Age' ordinal='8' />
              <column datatype='integer' name='Urban Pop %' ordinal='9' />
              <column datatype='real' name='World Share' ordinal='10' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Code]' value='[df_15_cleaned.csv].[Code]' />
          <map key='[Country/region (population_cleaned.csv)]' value='[population_cleaned.csv].[Country/region]' />
          <map key='[Country/region]' value='[df_15_cleaned.csv].[Country/region]' />
          <map key='[Density (P/Km²)]' value='[population_cleaned.csv].[Density (P/Km²)]' />
          <map key='[Description]' value='[df_15_cleaned.csv].[Description]' />
          <map key='[Fert. Rate]' value='[population_cleaned.csv].[Fert. Rate]' />
          <map key='[Geo_code]' value='[df_15_cleaned.csv].[Geo_code]' />
          <map key='[Land Area (Km²)]' value='[population_cleaned.csv].[Land Area (Km²)]' />
          <map key='[Med. Age]' value='[population_cleaned.csv].[Med. Age]' />
          <map key='[Migrants (net)]' value='[population_cleaned.csv].[Migrants (net)]' />
          <map key='[Net Change]' value='[population_cleaned.csv].[Net Change]' />
          <map key='[Population (2020)]' value='[population_cleaned.csv].[Population (2020)]' />
          <map key='[Urban Pop %]' value='[population_cleaned.csv].[Urban Pop %]' />
          <map key='[Value]' value='[df_15_cleaned.csv].[Value]' />
          <map key='[World Share]' value='[population_cleaned.csv].[World Share]' />
          <map key='[Year]' value='[df_15_cleaned.csv].[Year]' />
          <map key='[Yearly Change]' value='[population_cleaned.csv].[Yearly Change]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geo_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Geo_code]</local-name>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias>Geo_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region]</local-name>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[df_15_cleaned.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region (population_cleaned.csv)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (2020)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (2020)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Population (2020)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yearly Change]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Yearly Change</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net Change]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Net Change</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density (P/Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density (P/Km²)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Density (P/Km²)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area (Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area (Km²)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Land Area (Km²)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migrants (net)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Migrants (net)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Migrants (net)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert. Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert. Rate]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Fert. Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med. Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med. Age]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Med. Age</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Pop %</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban Pop %]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Urban Pop %</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World Share]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>World Share</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1266918897203019776]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank(Sum([Value]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country/region (population cleaned.csv)' datatype='string' name='[Country/region (population_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Geo code' datatype='integer' name='[Geo_code]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_15_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05]' role='measure' type='quantitative' />
      <column-instance column='[Country/region (population_cleaned.csv)]' derivation='None' name='[none:Country/region (population_cleaned.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country/region)' hidden='true' name='[Action (Country/region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/region (population_cleaned.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Svalbard and Jan Mayen Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Developed regions (Europe, Cyprus, Israel, Northern America, Japan, Australia &amp; New Zealand)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania (exc. Australia and New Zealand)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eastern Asia (excluding Japan)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melanesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southern Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Asia (exc. Armenia, Azerbaijan, Cyprus, Israel and Georgia)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Landlocked developing countries (LLDCs)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Martin (French Part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South-Eastern Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Developing regions&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Africa and Western Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central and Southern Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Least Developed Countries (LDCs)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Africa (exc. Sudan)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sub-Saharan Africa (inc. Sudan)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern and South-Eastern Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caucasus and Central Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe and Northern America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Small island developing States (SIDS)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='Geo_code' />
        <field-sort-custom-order field='Country/region' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Value' />
        <field-sort-custom-order field='Calculation_1266918897203019776' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_15_cleaned.csv' id='df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F'>
            <properties context=''>
              <relation connection='textscan.00qu48s1s0fu1g16orreq008pi5b' name='df_15_cleaned.csv' table='[df_15_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                  <column datatype='integer' name='Geo_code' ordinal='2' />
                  <column datatype='string' name='Country/region' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Value' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_cleaned.csv' id='population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05'>
            <properties context=''>
              <relation connection='textscan.00qu48s1s0fu1g16orreq008pi5b' name='population_cleaned.csv' table='[population_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Country/region' ordinal='0' />
                  <column datatype='integer' name='Population (2020)' ordinal='1' />
                  <column datatype='real' name='Yearly Change' ordinal='2' />
                  <column datatype='integer' name='Net Change' ordinal='3' />
                  <column datatype='integer' name='Density (P/Km²)' ordinal='4' />
                  <column datatype='integer' name='Land Area (Km²)' ordinal='5' />
                  <column datatype='integer' name='Migrants (net)' ordinal='6' />
                  <column datatype='real' name='Fert. Rate' ordinal='7' />
                  <column datatype='integer' name='Med. Age' ordinal='8' />
                  <column datatype='integer' name='Urban Pop %' ordinal='9' />
                  <column datatype='real' name='World Share' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country/region]' />
              <expression op='[Country/region (population_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='df_15_cleaned.csv_E42B1486DEBC42A0AB6CFD67E84DF78F' />
            <second-end-point object-id='population_cleaned.csv_45EF9858259B4136B00DBD2A0775CE05' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='df_14_cleaned' inline='true' name='federated.1a2nior0s2bcxa18m4cqc0ty5cxb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_14_cleaned' name='textscan.1eoz69x13fji891dhh0ai0512d2n'>
            <connection class='textscan' directory='C:/Users/bronw/OneDrive/Desktop/cleaned_tables' filename='df_14_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1eoz69x13fji891dhh0ai0512d2n' name='df_14_cleaned.csv' table='[df_14_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='string' name='Country/region' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1eoz69x13fji891dhh0ai0512d2n' name='df_14_cleaned.csv' table='[df_14_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='string' name='Country/region' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Value' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_14_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[df_14_cleaned.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[df_14_cleaned.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region]</local-name>
            <parent-name>[df_14_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_14_cleaned.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[df_14_cleaned.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Description]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Proportion of fish stocks that are fully exploited (\%)&quot;' value='Fully exploited ' />
          <alias key='&quot;Proportion of fish stocks that are not fully exploited (\%)&quot;' value='Not fully exploited' />
          <alias key='&quot;Proportion of fish stocks that are overexploited (\%)&quot;' value='Overexploited ' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_14_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8]' role='measure' type='quantitative' />
      <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country/region)' hidden='true' name='[Action (Country/region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Description:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Proportion of fish stocks that are not fully exploited (\%)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Proportion of fish stocks within biologically sustainable levels (not overexploited) (\%)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Proportion of fish stocks that are overexploited (\%)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Proportion of fish stocks that are fully exploited (\%)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_14_cleaned.csv' id='df_14_cleaned.csv_72A65CDF040549F9B68E82437CCF5DC8'>
            <properties context=''>
              <relation connection='textscan.1eoz69x13fji891dhh0ai0512d2n' name='df_14_cleaned.csv' table='[df_14_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                  <column datatype='string' name='Country/region' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Value' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='df_13_cleaned' inline='true' name='federated.1cc0cy20nfigof1d62o5t0nacs91' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_13_cleaned' name='textscan.1mc6ezd1t2vgyf1g5u4ab0xks9re'>
            <connection class='textscan' directory='C:/Users/bronw/OneDrive/Desktop/cleaned_tables' filename='df_13_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1mc6ezd1t2vgyf1g5u4ab0xks9re' name='df_13_cleaned.csv' table='[df_13_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='integer' name='Geo_code' ordinal='2' />
            <column datatype='string' name='Country/region' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='integer' name='Value' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1mc6ezd1t2vgyf1g5u4ab0xks9re' name='df_13_cleaned.csv' table='[df_13_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='string' name='Code' ordinal='0' />
              <column datatype='string' name='Description' ordinal='1' />
              <column datatype='integer' name='Geo_code' ordinal='2' />
              <column datatype='string' name='Country/region' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='integer' name='Value' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1mc6ezd1t2vgyf1g5u4ab0xks9re' name='population_cleaned.csv' table='[population_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='string' name='Country/region' ordinal='0' />
              <column datatype='integer' name='Population (2020)' ordinal='1' />
              <column datatype='real' name='Yearly Change' ordinal='2' />
              <column datatype='integer' name='Net Change' ordinal='3' />
              <column datatype='integer' name='Density (P/Km²)' ordinal='4' />
              <column datatype='integer' name='Land Area (Km²)' ordinal='5' />
              <column datatype='integer' name='Migrants (net)' ordinal='6' />
              <column datatype='real' name='Fert. Rate' ordinal='7' />
              <column datatype='integer' name='Med. Age' ordinal='8' />
              <column datatype='integer' name='Urban Pop %' ordinal='9' />
              <column datatype='real' name='World Share' ordinal='10' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Code]' value='[df_13_cleaned.csv].[Code]' />
          <map key='[Country/region (population_cleaned.csv)]' value='[population_cleaned.csv].[Country/region]' />
          <map key='[Country/region]' value='[df_13_cleaned.csv].[Country/region]' />
          <map key='[Density (P/Km²)]' value='[population_cleaned.csv].[Density (P/Km²)]' />
          <map key='[Description]' value='[df_13_cleaned.csv].[Description]' />
          <map key='[Fert. Rate]' value='[population_cleaned.csv].[Fert. Rate]' />
          <map key='[Geo_code]' value='[df_13_cleaned.csv].[Geo_code]' />
          <map key='[Land Area (Km²)]' value='[population_cleaned.csv].[Land Area (Km²)]' />
          <map key='[Med. Age]' value='[population_cleaned.csv].[Med. Age]' />
          <map key='[Migrants (net)]' value='[population_cleaned.csv].[Migrants (net)]' />
          <map key='[Net Change]' value='[population_cleaned.csv].[Net Change]' />
          <map key='[Population (2020)]' value='[population_cleaned.csv].[Population (2020)]' />
          <map key='[Urban Pop %]' value='[population_cleaned.csv].[Urban Pop %]' />
          <map key='[Value]' value='[df_13_cleaned.csv].[Value]' />
          <map key='[World Share]' value='[population_cleaned.csv].[World Share]' />
          <map key='[Year]' value='[df_13_cleaned.csv].[Year]' />
          <map key='[Yearly Change]' value='[population_cleaned.csv].[Yearly Change]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geo_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Geo_code]</local-name>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias>Geo_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region]</local-name>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[df_13_cleaned.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region (population_cleaned.csv)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (2020)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (2020)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Population (2020)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yearly Change]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Yearly Change</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net Change]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Net Change</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density (P/Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density (P/Km²)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Density (P/Km²)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area (Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area (Km²)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Land Area (Km²)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migrants (net)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Migrants (net)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Migrants (net)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert. Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert. Rate]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Fert. Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med. Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med. Age]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Med. Age</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Pop %</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban Pop %]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Urban Pop %</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World Share]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>World Share</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1251156299168354304]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Country/region] = &quot;Angola&quot; then 0&#13;&#10;else [Value]&#13;&#10;END' />
      </column>
      <column caption='Country/region (population cleaned.csv)' datatype='string' name='[Country/region (population_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='integer' name='[Density (P/Km²)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Description]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Number of deaths due to disaster (number)&quot;' value='Number of Deaths ' />
          <alias key='&quot;Number of missing persons due to disaster (number)&quot;' value='Number of Missing Persons' />
          <alias key='&quot;Number of people affected by disaster (number)&quot;' value='Number of Persons Affected ' />
        </aliases>
      </column>
      <column caption='Geo code' datatype='integer' name='[Geo_code]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[World Share]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_13_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_cleaned.csv_A144A02BE83840798475E12018B2EC98]' role='measure' type='quantitative' />
      <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country/region)' hidden='true' name='[Action (Country/region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/region]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country/region)' hidden='true' name='[Tooltip (Country/region)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Description:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Number of deaths due to disaster (number)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Number of people affected by disaster (number)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Number of missing persons due to disaster (number)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='Geo_code' />
        <field-sort-custom-order field='Country/region' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Value' />
        <field-sort-custom-order field='Calculation_1251156299168354304' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_13_cleaned.csv' id='df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF'>
            <properties context=''>
              <relation connection='textscan.1mc6ezd1t2vgyf1g5u4ab0xks9re' name='df_13_cleaned.csv' table='[df_13_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                  <column datatype='integer' name='Geo_code' ordinal='2' />
                  <column datatype='string' name='Country/region' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='integer' name='Value' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_cleaned.csv' id='population_cleaned.csv_A144A02BE83840798475E12018B2EC98'>
            <properties context=''>
              <relation connection='textscan.1mc6ezd1t2vgyf1g5u4ab0xks9re' name='population_cleaned.csv' table='[population_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Country/region' ordinal='0' />
                  <column datatype='integer' name='Population (2020)' ordinal='1' />
                  <column datatype='real' name='Yearly Change' ordinal='2' />
                  <column datatype='integer' name='Net Change' ordinal='3' />
                  <column datatype='integer' name='Density (P/Km²)' ordinal='4' />
                  <column datatype='integer' name='Land Area (Km²)' ordinal='5' />
                  <column datatype='integer' name='Migrants (net)' ordinal='6' />
                  <column datatype='real' name='Fert. Rate' ordinal='7' />
                  <column datatype='integer' name='Med. Age' ordinal='8' />
                  <column datatype='integer' name='Urban Pop %' ordinal='9' />
                  <column datatype='real' name='World Share' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country/region]' />
              <expression op='[Country/region (population_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='df_13_cleaned.csv_AF366ABDF57B4915AE850F7540D0F0FF' />
            <second-end-point object-id='population_cleaned.csv_A144A02BE83840798475E12018B2EC98' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='df_11_cleaned' inline='true' name='federated.0eppdt516b3fb9121wac01vrpqpk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_11_cleaned' name='textscan.0vbypn11dqua6d1fs27xd06auci9'>
            <connection class='textscan' directory='C:/Users/bronw/OneDrive/Desktop/cleaned_tables' filename='df_11_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0vbypn11dqua6d1fs27xd06auci9' name='df_11_cleaned.csv' table='[df_11_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Code' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='integer' name='Geo_code' ordinal='2' />
            <column datatype='string' name='Country/region' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Value' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0vbypn11dqua6d1fs27xd06auci9' name='df_11_cleaned.csv' table='[df_11_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='string' name='Code' ordinal='0' />
              <column datatype='string' name='Description' ordinal='1' />
              <column datatype='integer' name='Geo_code' ordinal='2' />
              <column datatype='string' name='Country/region' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='real' name='Value' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0vbypn11dqua6d1fs27xd06auci9' name='population_cleaned.csv' table='[population_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='string' name='Country/region' ordinal='0' />
              <column datatype='integer' name='Population (2020)' ordinal='1' />
              <column datatype='real' name='Yearly Change' ordinal='2' />
              <column datatype='integer' name='Net Change' ordinal='3' />
              <column datatype='integer' name='Density (P/Km²)' ordinal='4' />
              <column datatype='integer' name='Land Area (Km²)' ordinal='5' />
              <column datatype='integer' name='Migrants (net)' ordinal='6' />
              <column datatype='real' name='Fert. Rate' ordinal='7' />
              <column datatype='integer' name='Med. Age' ordinal='8' />
              <column datatype='integer' name='Urban Pop %' ordinal='9' />
              <column datatype='real' name='World Share' ordinal='10' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Code]' value='[df_11_cleaned.csv].[Code]' />
          <map key='[Country/region (population_cleaned.csv)]' value='[population_cleaned.csv].[Country/region]' />
          <map key='[Country/region]' value='[df_11_cleaned.csv].[Country/region]' />
          <map key='[Density (P/Km²)]' value='[population_cleaned.csv].[Density (P/Km²)]' />
          <map key='[Description]' value='[df_11_cleaned.csv].[Description]' />
          <map key='[Fert. Rate]' value='[population_cleaned.csv].[Fert. Rate]' />
          <map key='[Geo_code]' value='[df_11_cleaned.csv].[Geo_code]' />
          <map key='[Land Area (Km²)]' value='[population_cleaned.csv].[Land Area (Km²)]' />
          <map key='[Med. Age]' value='[population_cleaned.csv].[Med. Age]' />
          <map key='[Migrants (net)]' value='[population_cleaned.csv].[Migrants (net)]' />
          <map key='[Net Change]' value='[population_cleaned.csv].[Net Change]' />
          <map key='[Population (2020)]' value='[population_cleaned.csv].[Population (2020)]' />
          <map key='[Urban Pop %]' value='[population_cleaned.csv].[Urban Pop %]' />
          <map key='[Value]' value='[df_11_cleaned.csv].[Value]' />
          <map key='[World Share]' value='[population_cleaned.csv].[World Share]' />
          <map key='[Year]' value='[df_11_cleaned.csv].[Year]' />
          <map key='[Yearly Change]' value='[population_cleaned.csv].[Yearly Change]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geo_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Geo_code]</local-name>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias>Geo_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region]</local-name>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[df_11_cleaned.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/region (population_cleaned.csv)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Country/region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (2020)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (2020)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Population (2020)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yearly Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yearly Change]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Yearly Change</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net Change]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Net Change</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density (P/Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density (P/Km²)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Density (P/Km²)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area (Km²)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area (Km²)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Land Area (Km²)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migrants (net)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Migrants (net)]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Migrants (net)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert. Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert. Rate]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Fert. Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med. Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med. Age]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Med. Age</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Pop %</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban Pop %]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>Urban Pop %</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World Share]</local-name>
            <parent-name>[population_cleaned.csv]</parent-name>
            <remote-alias>World Share</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='First_Value' datatype='real' name='[Calculation_1791306784128995330]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year]= [Parameters].[Year 2014 Parameter] then [Value] END' />
      </column>
      <column caption='Second_Value' datatype='real' name='[Calculation_1791306784129073155]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year]= [Parameters].[Value One (copy)] then [Value] END' />
      </column>
      <column caption='First Last' datatype='real' name='[Calculation_1791306784129179652]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Parameters].[Year 2014 Parameter]) - AVG([Parameters].[Value One (copy)])' />
      </column>
      <column caption='Year_Change' datatype='real' name='[Calculation_1791306784131461125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_1791306784128995330]) - AVG([Calculation_1791306784129073155])' />
      </column>
      <column caption='Rank_2' datatype='integer' name='[Calculation_1791306784165658634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank([Calculation_1791306784131461125],&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_91197919322828801]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank(Sum([Value]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country/region (population cleaned.csv)' datatype='string' name='[Country/region (population_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Geo code' datatype='integer' name='[Geo_code]' role='dimension' type='ordinal' />
      <column caption='Rank_better' datatype='integer' name='[Rank_2 (copy)_1350516970949345280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank([Calculation_1791306784131461125],&apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_11_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049]' role='measure' type='quantitative' />
      <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country/region)' hidden='true' name='[Action (Country/region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/region]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Africa and Western Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe and Northern America&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastern and South-Eastern Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central and Southern Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='Geo_code' />
        <field-sort-custom-order field='Country/region' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Value' />
        <field-sort-custom-order field='Calculation_91197919322828801' />
        <field-sort-custom-order field='Calculation_1791306784165658634' />
        <field-sort-custom-order field='Rank_2 (copy)_1350516970949345280' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2005' caption='From Year' datatype='integer' name='[Value One (copy)]' param-domain-type='list' role='measure' type='quantitative' value='2005'>
          <calculation class='tableau' formula='2005' />
          <aliases>
            <alias key='2000' value='2000' />
            <alias key='2005' value='2005' />
            <alias key='2010' value='2010' />
          </aliases>
        </column>
        <column alias='2014' caption='To Year' datatype='integer' name='[Year 2014 Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
          <calculation class='tableau' formula='2014' />
          <aliases>
            <alias key='2005' value='2005' />
            <alias key='2010' value='2010' />
            <alias key='2014' value='2014' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_11_cleaned.csv' id='df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F'>
            <properties context=''>
              <relation connection='textscan.0vbypn11dqua6d1fs27xd06auci9' name='df_11_cleaned.csv' table='[df_11_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                  <column datatype='integer' name='Geo_code' ordinal='2' />
                  <column datatype='string' name='Country/region' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Value' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_cleaned.csv' id='population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049'>
            <properties context=''>
              <relation connection='textscan.0vbypn11dqua6d1fs27xd06auci9' name='population_cleaned.csv' table='[population_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Country/region' ordinal='0' />
                  <column datatype='integer' name='Population (2020)' ordinal='1' />
                  <column datatype='real' name='Yearly Change' ordinal='2' />
                  <column datatype='integer' name='Net Change' ordinal='3' />
                  <column datatype='integer' name='Density (P/Km²)' ordinal='4' />
                  <column datatype='integer' name='Land Area (Km²)' ordinal='5' />
                  <column datatype='integer' name='Migrants (net)' ordinal='6' />
                  <column datatype='real' name='Fert. Rate' ordinal='7' />
                  <column datatype='integer' name='Med. Age' ordinal='8' />
                  <column datatype='integer' name='Urban Pop %' ordinal='9' />
                  <column datatype='real' name='World Share' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country/region]' />
              <expression op='[Country/region (population_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='df_11_cleaned.csv_017739E3F5D44D4283FAB706AA68D28F' />
            <second-end-point object-id='population_cleaned.csv_794330D8DE8C4377A2367DC544DEC049' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_63438B24A829437D86AC772347CBC103]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Goal 11' type='sheet' worksheet='Urban Population Top' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Goal 11' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_AB123AEFDA414A11A0195441A5B630B2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Goal 11' type='sheet' worksheet='Urban Population' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Goal 11' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action5_7A09E5182E744CB096909B1EB356413B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Goal 13' type='sheet' worksheet='Disaster Graph' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Goal 13' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6_5A9CC4012BD749C9A53A52EF25A59CC2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Goal 13' type='sheet' worksheet='Disaster Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Goal 13' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_9B17B7F7431B47D5ADA39B17E21FDC77]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Goal 11' type='sheet' worksheet='Urban Population Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Goal 11' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action7_A636AAB59BD64D16AEB81DCC80EB1CE0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Goal 14' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Description' />
        <param name='target' value='Goal 14' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Disaster Graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;</run>
            <run bold='true'>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]</run>
            <run bold='true'>&gt; in &lt;</run>
            <run bold='true'>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Country/region]</run>
            <run bold='true'>&gt; per Year </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_13_cleaned' name='federated.1cc0cy20nfigof1d62o5t0nacs91' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cc0cy20nfigof1d62o5t0nacs91'>
            <column caption='Calculation1' datatype='integer' name='[Calculation_1251156299168354304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country/region] = &quot;Angola&quot; then 0&#13;&#10;else [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Number of deaths due to disaster (number)&quot;' value='Number of Deaths ' />
                <alias key='&quot;Number of missing persons due to disaster (number)&quot;' value='Number of Missing Persons' />
                <alias key='&quot;Number of people affected by disaster (number)&quot;' value='Number of Persons Affected ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Description]' derivation='Attribute' name='[attr:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1251156299168354304]' derivation='Sum' name='[sum:Calculation_1251156299168354304:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Country/region)]'>
            <groupfilter function='level-members' level='[Country/region]' user:ui-action-filter='[Action6_5A9CC4012BD749C9A53A52EF25A59CC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_AB123AEFDA414A11A0195441A5B630B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Description:nk]' member='&quot;Number of people affected by disaster (number)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]</column>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Year)]</column>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Country/region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]' value='49' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park-stroke' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='parks-stroke' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[attr:Description:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.1cc0cy20nfigof1d62o5t0nacs91].[attr:Description:nk]>: <[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Calculation_1251156299168354304:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Calculation_1251156299168354304:qk]</rows>
        <cols>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{0C3797D9-E7A8-4E7C-8F3F-D6F66EDA380A}' />
    </worksheet>
    <worksheet name='Disaster Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'> Natural Disasters| &lt;</run>
            <run bold='true'>[federated.1cc0cy20nfigof1d62o5t0nacs91].[attr:Description:nk]</run>
            <run bold='true'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_13_cleaned' name='federated.1cc0cy20nfigof1d62o5t0nacs91' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cc0cy20nfigof1d62o5t0nacs91'>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Number of deaths due to disaster (number)&quot;' value='Number of Deaths ' />
                <alias key='&quot;Number of missing persons due to disaster (number)&quot;' value='Number of Missing Persons' />
                <alias key='&quot;Number of people affected by disaster (number)&quot;' value='Number of Persons Affected ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Population (2020)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Urban Pop %]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[World Share]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Description]' derivation='Attribute' name='[attr:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population (2020)]' derivation='Sum' name='[sum:Population (2020):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban Pop %]' derivation='Sum' name='[sum:Urban Pop %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Share]' derivation='Sum' name='[sum:World Share:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Country/region)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country/region]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Country/region]' member='%null%' />
                <groupfilter function='member' level='[Country/region]' member='&quot;Angola&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_EEB5EF5ABDF245379AB0C25972D3A304]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Description:nk]' member='&quot;Number of people affected by disaster (number)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Value:qk]' included-values='in-range'>
            <min>4</min>
          </filter>
          <slices>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]</column>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]</column>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Country/region)]</column>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Action (Year)]</column>
            <column>[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Longitude (generated)]' field-type='quantitative' max='20163058.04681991' min='-21891042.305417933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Latitude (generated)]' field-type='quantitative' max='18834188.857932486' min='-5300834.1398597015' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='2000' field='[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Value:qk]' max='89943' min='0' num-steps='9' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fbf7fb' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park-stroke' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='parks-stroke' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Value:qk]' />
              <tooltip column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[attr:Description:nk]' />
              <tooltip column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Population (2020):qk]' />
              <tooltip column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:World Share:qk]' />
              <tooltip column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Urban Pop %:qk]' />
              <lod column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Country/region:nk]' />
              <geometry column='[federated.1cc0cy20nfigof1d62o5t0nacs91].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Country|</run>
                <run><![CDATA[ <[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Country/region:nk]>
]]></run>
                <run bold='true'>Population (2020) |</run>
                <run><![CDATA[ <[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Population (2020):qk]>]]></run>
                <run indent='6750'>Æ&#10;</run>
                <run bold='true' indent='6750'><![CDATA[ <[federated.1cc0cy20nfigof1d62o5t0nacs91].[attr:Description:nk]>| ]]></run>
                <run indent='6750'> (</run>
                <run bold='true' indent='6750'>Natural Disaster) </run>
                <run indent='6750'><![CDATA[<[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Value:qk]> 
]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Latitude (generated)]</rows>
        <cols>[federated.1cc0cy20nfigof1d62o5t0nacs91].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{305E0923-5282-48E4-A455-E5022D24568F}' />
    </worksheet>
    <worksheet name='Fish Stocks'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>% of Worldwide Fish Stocks Within Sustainable Levels</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_14_cleaned' name='federated.1a2nior0s2bcxa18m4cqc0ty5cxb' />
          </datasources>
          <datasource-dependencies datasource='federated.1a2nior0s2bcxa18m4cqc0ty5cxb'>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Proportion of fish stocks that are fully exploited (\%)&quot;' value='Fully exploited ' />
                <alias key='&quot;Proportion of fish stocks that are not fully exploited (\%)&quot;' value='Not fully exploited' />
                <alias key='&quot;Proportion of fish stocks that are overexploited (\%)&quot;' value='Overexploited ' />
              </aliases>
            </column>
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[Action (Country/region)]'>
            <groupfilter function='level-members' level='[Country/region]' user:ui-action-filter='[Action1_B7761DD4B83E4651BB7DF4DB71BBBE8D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Description:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Description:nk]' member='&quot;Proportion of fish stocks within biologically sustainable levels (not overexploited) (\%)&quot;' />
                <groupfilter function='member' level='[none:Description:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Proportion of fish stocks that are not fully exploited (\%)&quot;</bucket>
              <bucket>&quot;Proportion of fish stocks that are fully exploited (\%)&quot;</bucket>
              <bucket>&quot;Proportion of fish stocks that are overexploited (\%)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[Action (Country/region)]</column>
            <column>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</rows>
        <cols>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>27.437642</value>
                <value>&quot;Proportion of fish stocks that are overexploited (\%)&quot;</value>
                <value>2000</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>31.359649000000001</value>
                <value>&quot;Proportion of fish stocks that are overexploited (\%)&quot;</value>
                <value>2013</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>25.396825</value>
                <value>&quot;Proportion of fish stocks that are not fully exploited (\%)&quot;</value>
                <value>2000</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10.526316</value>
                <value>&quot;Proportion of fish stocks that are not fully exploited (\%)&quot;</value>
                <value>2013</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>47.165529999999997</value>
                <value>&quot;Proportion of fish stocks that are fully exploited (\%)&quot;</value>
                <value>2000</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[avg:Value:qk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
                  <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>58.114040000000003</value>
                <value>&quot;Proportion of fish stocks that are fully exploited (\%)&quot;</value>
                <value>2013</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{F7C451F4-901D-4C32-86BE-4C252BBF2F86}' />
    </worksheet>
    <worksheet name='Getting Worse Slums '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>Most deterioted countries : &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>[Parameters].[Value One (copy)]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>&gt; to &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>[Parameters].[Year 2014 Parameter]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_11_cleaned' name='federated.0eppdt516b3fb9121wac01vrpqpk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2005' caption='From Year' datatype='integer' name='[Value One (copy)]' param-domain-type='list' role='measure' type='quantitative' value='2005'>
              <calculation class='tableau' formula='2005' />
              <aliases>
                <alias key='2000' value='2000' />
                <alias key='2005' value='2005' />
                <alias key='2010' value='2010' />
              </aliases>
            </column>
            <column alias='2014' caption='To Year' datatype='integer' name='[Year 2014 Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
              <calculation class='tableau' formula='2014' />
              <aliases>
                <alias key='2005' value='2005' />
                <alias key='2010' value='2010' />
                <alias key='2014' value='2014' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0eppdt516b3fb9121wac01vrpqpk'>
            <column caption='First_Value' datatype='real' name='[Calculation_1791306784128995330]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year]= [Parameters].[Year 2014 Parameter] then [Value] END' />
            </column>
            <column caption='Second_Value' datatype='real' name='[Calculation_1791306784129073155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year]= [Parameters].[Value One (copy)] then [Value] END' />
            </column>
            <column caption='Year_Change' datatype='real' name='[Calculation_1791306784131461125]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1791306784128995330]) - AVG([Calculation_1791306784129073155])' />
            </column>
            <column caption='Rank_2' datatype='integer' name='[Calculation_1791306784165658634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Rank([Calculation_1791306784131461125],&apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1791306784128995330]' derivation='Avg' name='[avg:Calculation_1791306784128995330:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1791306784129073155]' derivation='Avg' name='[avg:Calculation_1791306784129073155:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1791306784131461125]' derivation='User' name='[usr:Calculation_1791306784131461125:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1791306784165658634]' derivation='User' name='[usr:Calculation_1791306784165658634:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' included-values='in-range'>
            <min>0.001</min>
          </filter>
          <filter class='quantitative' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784165658634:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784165658634:qk]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' value='0' />
            <format attr='text-decoration' scope='cols' value='none' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='normal' />
            <format attr='font-size' scope='cols' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' />
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784128995330:qk]' />
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784129073155:qk]' />
              <tooltip column='[Parameters].[Year 2014 Parameter]' />
              <tooltip column='[Parameters].[Value One (copy)]' />
              <text column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b'>Country/region|</run>
                <run fontcolor='#1b1b1b'>Æ&#9;</run>
                <run><![CDATA[<[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run>Æ&#10;</run>
                <run bold='true'>% in Slums 2000  </run>
                <run bold='true' fontcolor='#1b1b1b'>|</run>
                <run bold='true'><![CDATA[	 <[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784129073155:qk]>]]></run>
                <run> %&#10;</run>
                <run bold='true'><![CDATA[% in Slums 2014 |	 <[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784128995330:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>+&lt;</run>
                <run>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]</run>
                <run>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]</rows>
        <cols>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</cols>
      </table>
      <simple-id uuid='{5861ED14-A979-46CC-9BFF-12BB8E7DB51D}' />
    </worksheet>
    <worksheet name='Most Improved Slums'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'><![CDATA[Most improved  countries from : <]]></run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>[Parameters].[Value One (copy)]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>&gt; to &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>[Parameters].[Year 2014 Parameter]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_11_cleaned' name='federated.0eppdt516b3fb9121wac01vrpqpk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2005' caption='From Year' datatype='integer' name='[Value One (copy)]' param-domain-type='list' role='measure' type='quantitative' value='2005'>
              <calculation class='tableau' formula='2005' />
              <aliases>
                <alias key='2000' value='2000' />
                <alias key='2005' value='2005' />
                <alias key='2010' value='2010' />
              </aliases>
            </column>
            <column alias='2014' caption='To Year' datatype='integer' name='[Year 2014 Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
              <calculation class='tableau' formula='2014' />
              <aliases>
                <alias key='2005' value='2005' />
                <alias key='2010' value='2010' />
                <alias key='2014' value='2014' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0eppdt516b3fb9121wac01vrpqpk'>
            <column caption='First_Value' datatype='real' name='[Calculation_1791306784128995330]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year]= [Parameters].[Year 2014 Parameter] then [Value] END' />
            </column>
            <column caption='Second_Value' datatype='real' name='[Calculation_1791306784129073155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year]= [Parameters].[Value One (copy)] then [Value] END' />
            </column>
            <column caption='Year_Change' datatype='real' name='[Calculation_1791306784131461125]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1791306784128995330]) - AVG([Calculation_1791306784129073155])' />
            </column>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Rank_better' datatype='integer' name='[Rank_2 (copy)_1350516970949345280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Rank([Calculation_1791306784131461125],&apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1791306784128995330]' derivation='Avg' name='[avg:Calculation_1791306784128995330:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1791306784129073155]' derivation='Avg' name='[avg:Calculation_1791306784129073155:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1791306784131461125]' derivation='User' name='[usr:Calculation_1791306784131461125:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank_2 (copy)_1350516970949345280]' derivation='User' name='[usr:Rank_2 (copy)_1350516970949345280:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' direction='DESC' using='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' />
          <filter class='quantitative' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Rank_2 (copy)_1350516970949345280:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Rank_2 (copy)_1350516970949345280:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' scope='rows' value='false' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='normal' />
            <format attr='font-weight' data-class='total' scope='rows' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' value='0' />
            <format attr='font-weight' value='normal' />
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='normal' />
            <format attr='font-size' scope='cols' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' palette='green_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' />
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784128995330:qk]' />
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784129073155:qk]' />
              <tooltip column='[Parameters].[Year 2014 Parameter]' />
              <tooltip column='[Parameters].[Value One (copy)]' />
              <text column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b'>Country/region|</run>
                <run fontcolor='#1b1b1b'>Æ&#9;</run>
                <run><![CDATA[<[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run>Æ&#10;</run>
                <run bold='true'>% in Slums 2000  </run>
                <run bold='true' fontcolor='#1b1b1b'>|</run>
                <run bold='true'><![CDATA[	 <[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784129073155:qk]>]]></run>
                <run> %&#10;</run>
                <run bold='true'><![CDATA[% in Slums 2014 |	 <[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Calculation_1791306784128995330:qk]>]]></run>
                <run>%</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]</run>
                <run>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_1791306784131461125:qk]</rows>
        <cols>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</cols>
      </table>
      <simple-id uuid='{1024A8B9-D489-45CA-AA88-CF8E3480794D}' />
    </worksheet>
    <worksheet name='Urban Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>% of Urban population Living in Slums</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_11_cleaned' name='federated.0eppdt516b3fb9121wac01vrpqpk' />
          </datasources>
          <datasource-dependencies datasource='federated.0eppdt516b3fb9121wac01vrpqpk'>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Country/region)]'>
            <groupfilter function='level-members' level='[Country/region]' user:ui-action-filter='[Action2_63438B24A829437D86AC772347CBC103]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_EEB5EF5ABDF245379AB0C25972D3A304]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Country/region)]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]</rows>
        <cols>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{91D772B3-81F6-4DA2-A305-36B8B22C36C8}' />
    </worksheet>
    <worksheet name='Urban Population Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>% of Urban population Living in Slums</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_11_cleaned' name='federated.0eppdt516b3fb9121wac01vrpqpk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0eppdt516b3fb9121wac01vrpqpk'>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Country/region)]'>
            <groupfilter function='level-members' level='[Country/region]' user:ui-action-filter='[Action2_63438B24A829437D86AC772347CBC103]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_AB123AEFDA414A11A0195441A5B630B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Country/region)]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park-stroke' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='parks-stroke' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' />
              <color column='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' />
              <geometry column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0eppdt516b3fb9121wac01vrpqpk].[Latitude (generated)]</rows>
        <cols>[federated.0eppdt516b3fb9121wac01vrpqpk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{713D5EA2-2762-4D0C-BCB5-AB0038DF7621}' />
    </worksheet>
    <worksheet name='Urban Population Top'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'><![CDATA[Highest % living in slums in the year: <]]></run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_11_cleaned' name='federated.0eppdt516b3fb9121wac01vrpqpk' />
          </datasources>
          <datasource-dependencies datasource='federated.0eppdt516b3fb9121wac01vrpqpk'>
            <column caption='Rank' datatype='integer' name='[Calculation_91197919322828801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Rank(Sum([Value]),&apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country/region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population (2020)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Urban Pop %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Description]' derivation='Attribute' name='[attr:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/region]' derivation='None' name='[none:Country/region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Population (2020)]' derivation='Sum' name='[sum:Population (2020):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban Pop %]' derivation='Sum' name='[sum:Urban Pop %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_91197919322828801]' derivation='User' name='[usr:Calculation_91197919322828801:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Country/region)]'>
            <groupfilter function='level-members' level='[Country/region]' user:ui-action-filter='[Action1_D06A4A25F4274A06AD33C8F169F90EA0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_AB123AEFDA414A11A0195441A5B630B2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]'>
            <groupfilter function='level-members' level='[none:Country/region:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' direction='ASC' using='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' />
          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_91197919322828801:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[usr:Calculation_91197919322828801:qk]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Country/region)]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</column>
            <column>[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='8' />
            <format attr='text-orientation' field='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[attr:Description:nk]' />
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[sum:Urban Pop %:qk]' />
              <tooltip column='[federated.0eppdt516b3fb9121wac01vrpqpk].[sum:Population (2020):qk]' />
              <text column='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b'>Country/region|</run>
                <run fontcolor='#1b1b1b'>Æ&#9;</run>
                <run><![CDATA[<[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run>Æ&#10;</run>
                <run bold='true'>Population (2020)|&#9; </run>
                <run><![CDATA[<[federated.0eppdt516b3fb9121wac01vrpqpk].[sum:Population (2020):qk]>
]]></run>
                <run bold='true'>Urban Population (2020)|&#9;</run>
                <run><![CDATA[ <[federated.0eppdt516b3fb9121wac01vrpqpk].[sum:Urban Pop %:qk]>% ]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]</rows>
        <cols>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</cols>
      </table>
      <simple-id uuid='{3DE15BDE-0FFD-4599-8081-ED7FB80545A7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Goal 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Goal 11| Sustainable Cities and Communities </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>11.1 By 2030, ensure access for all to adequate, safe and affordable housing</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>and basic services and upgrade slums </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='83' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='48' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone fixed-size='92' h='12500' id='49' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='2250' id='53' type-v2='text' w='98400' x='800' y='13500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='83250' id='36' param='horz' type-v2='layout-flow' w='98400' x='800' y='15750'>
                <zone h='83250' id='34' type-v2='layout-basic' w='98400' x='800' y='15750'>
                  <zone h='44329' id='29' name='Urban Population Top' w='98400' x='800' y='54671'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='10450' id='33' type-v2='text' w='98400' x='800' y='15750'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>% of Population Living in Slums or Inadequate Housing</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28471' id='30' name='Urban Population' show-title='false' w='59590' x='39610' y='26200'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28471' id='81' name='Urban Population Map' show-title='false' w='38810' x='800' y='26200'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f7f1f6' />
          </zone-style>
        </zone>
        <zone h='9375' id='70' is-centered='0' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/11.png' type-v2='bitmap' w='8300' x='91400' y='1250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Goal 11| Sustainable Cities and Communities </run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>11.1 By 2030, ensure access for all to adequate, safe and affordable housing</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>and basic services and upgrade slums </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='111' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='110' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='92' h='12500' id='49' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9375' id='70' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/11.png' type-v2='bitmap' w='8300' x='91400' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2250' id='53' type-v2='text' w='98400' x='800' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10450' id='33' type-v2='text' w='98400' x='800' y='15750'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>% of Population Living in Slums or Inadequate Housing</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='28471' id='81' is-fixed='true' name='Urban Population Map' show-title='false' w='38810' x='800' y='26200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='28471' id='30' is-fixed='true' name='Urban Population' show-title='false' w='59590' x='39610' y='26200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44329' id='29' is-fixed='true' name='Urban Population Top' w='98400' x='800' y='54671'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f7f1f6' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D98BACB6-9752-4EB9-B2B3-1DD933D1DF81}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Goal 11 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Goal 11| Sustainable Cities and Communities </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>11.1 By 2030, ensure access for all to adequate, safe and affordable housing</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>and basic services and upgrade slums </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2005' caption='From Year' datatype='integer' name='[Value One (copy)]' param-domain-type='list' role='measure' type='quantitative' value='2005'>
          <calculation class='tableau' formula='2005' />
          <aliases>
            <alias key='2000' value='2000' />
            <alias key='2005' value='2005' />
            <alias key='2010' value='2010' />
          </aliases>
          <members>
            <member alias='2000' value='2000' />
            <member alias='2005' value='2005' />
            <member alias='2010' value='2010' />
          </members>
        </column>
        <column alias='2014' caption='To Year' datatype='integer' name='[Year 2014 Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
          <calculation class='tableau' formula='2014' />
          <aliases>
            <alias key='2005' value='2005' />
            <alias key='2010' value='2010' />
            <alias key='2014' value='2014' />
          </aliases>
          <members>
            <member alias='2005' value='2005' />
            <member alias='2010' value='2010' />
            <member alias='2014' value='2014' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='102' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='83' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='48' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='92' h='12500' id='49' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2250' id='53' type-v2='text' w='98400' x='800' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='4000' id='107' is-fixed='true' type-v2='empty' w='98400' x='800' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='283' h='36375' id='100' is-fixed='true' name='Most Improved Slums' w='98400' x='800' y='19750'>
                  <layout-cache minheight='181' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='48' h='7000' id='106' is-fixed='true' type-v2='empty' w='98400' x='800' y='56125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='35875' id='105' name='Getting Worse Slums ' w='98400' x='800' y='63125'>
                  <layout-cache minheight='181' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f7f1f6' />
          </zone-style>
        </zone>
        <zone h='9375' id='70' is-centered='0' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/11.png' type-v2='bitmap' w='8300' x='91400' y='1250' />
        <zone h='5500' id='103' mode='compact' param='[Parameters].[Value One (copy)]' type-v2='paramctrl' w='16000' x='1400' y='13875' />
        <zone h='5500' id='104' mode='compact' param='[Parameters].[Year 2014 Parameter]' type-v2='paramctrl' w='16000' x='83000' y='13750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Goal 11| Sustainable Cities and Communities </run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>11.1 By 2030, ensure access for all to adequate, safe and affordable housing</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>and basic services and upgrade slums </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='119' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='118' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='92' h='12500' id='49' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9375' id='70' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/11.png' type-v2='bitmap' w='8300' x='91400' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2250' id='53' type-v2='text' w='98400' x='800' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='104' mode='compact' param='[Parameters].[Year 2014 Parameter]' type-v2='paramctrl' w='16000' x='83000' y='13750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='103' mode='compact' param='[Parameters].[Value One (copy)]' type-v2='paramctrl' w='16000' x='1400' y='13875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36375' id='100' is-fixed='true' name='Most Improved Slums' w='98400' x='800' y='19750'>
                  <layout-cache minheight='181' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='35875' id='105' is-fixed='true' name='Getting Worse Slums ' w='98400' x='800' y='63125'>
                  <layout-cache minheight='181' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f7f1f6' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D63497B-2B98-4FB9-89C2-C60E9B968C1A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Goal 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Goal 13| Climate Action</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>13.1 Strengthen resilience and adaptive capacity to climate related hazards and natural disasters</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>in all countries </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='12375' id='7' type-v2='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4000' id='29' is-fixed='true' type-v2='empty' w='98400' x='800' y='13375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='81625' id='6' type-v2='layout-basic' w='98400' x='800' y='17375'>
                <zone h='50803' id='8' name='Disaster Map' w='98400' x='800' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24748' id='12' name='Disaster Graph' w='98400' x='800' y='74252'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6074' id='13' type-v2='empty' w='98400' x='800' y='68178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#f7f1f6' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f7f1f6' />
          </zone-style>
        </zone>
        <zone h='9000' id='28' is-centered='0' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/Climate.png' type-v2='bitmap' w='9900' x='91900' y='1375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Goal 13| Climate Action</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>13.1 Strengthen resilience and adaptive capacity to climate related hazards and natural disasters</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>in all countries </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='67' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='66' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='12375' id='7' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='9000' id='28' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/Climate.png' type-v2='bitmap' w='9900' x='91900' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50803' id='8' is-fixed='true' name='Disaster Map' w='98400' x='800' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='190' h='24748' id='12' is-fixed='true' name='Disaster Graph' w='98400' x='800' y='74252'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f7f1f6' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A99C9583-45F3-47D5-B1A8-25F0C5868C0C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Goal 14'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Goal 14| Life Below water</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>14.4 By 2020, effectively regulate harvesting and end overfishing, illegal, unreported and </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>unregulated fishing and destructive fishing practices and implement science-based management</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>plans in order to restore fish stocks in the shortest time feasible</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='27' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone fixed-size='118' h='15750' id='24' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='40' h='6000' id='42' is-fixed='true' type-v2='empty' w='98400' x='800' y='16750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='76250' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='22750'>
                <zone h='76250' id='25' name='Fish Stocks' w='98400' x='800' y='22750'>
                  <layout-cache minheight='198' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f7f1f6' />
          </zone-style>
        </zone>
        <zone h='7500' id='28' name='Fish Stocks' pane-specification-id='0' param='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]' show-title='false' type-v2='color' w='14000' x='1200' y='22625' />
        <zone h='9375' id='41' is-centered='0' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/water.png' type-v2='bitmap' w='12100' x='91900' y='1375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Goal 14| Life Below water</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>14.4 By 2020, effectively regulate harvesting and end overfishing, illegal, unreported and </run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>unregulated fishing and destructive fishing practices and implement science-based management</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Tableau Light' fontsize='14'>plans in order to restore fish stocks in the shortest time feasible</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='80' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='79' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='118' h='15750' id='24' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9375' id='41' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/bronw/OneDrive/Desktop/water.png' type-v2='bitmap' w='12100' x='91900' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76250' id='25' is-fixed='true' name='Fish Stocks' w='98400' x='800' y='22750'>
                  <layout-cache minheight='198' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='28' name='Fish Stocks' pane-specification-id='0' param='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]' show-title='false' type-v2='color' w='14000' x='1200' y='22625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f7f1f6' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89AC6DD3-0415-4685-953F-3615B753C018}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='304' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='7' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
              <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='830' />
              <zone h='87863' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='11307'>
                <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Overall, the % of urban population living in inaqaudate housing has reduce 10% since 2005 &#10;&#10;However, many problem areas remain where not enough progress has been made.' captured-sheet='Goal 11' id='1'>
                      <capturedDeltas>
                        <dashboard name='Goal 11'>
                          <zone id='33'>
                            <formatted-text>
                              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>% of Population Living in Slums or Inadequate Housing</run>
                            </formatted-text>
                          </zone>
                        </dashboard>
                        <worksheet name='Urban Population Map'>
                          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[Action (Year)]'>
                            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                          <filter class='categorical' column='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]'>
                            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Many countries have made very good improvements in the past 10-14 years particularly Sierria Leorne, Rwanda, Angola etc. &#10;More reseach should be done into these countries so they can be used as a potential improvement model for other countries.&#10;The situation in other countries such as Iraq has deterioted  within the same time peroid. I recommend that the history and economic system of these countries are also researched futher in order to think of ways to improve the issue faced.' captured-sheet='Goal 11 (2)' id='6'>
                      <capturedDeltas>
                        <datasource name='Parameters'>
                          <column alias='2000' name='[Value One (copy)]' value='2000' />
                        </datasource>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='People affected  by naural disaster seems ro be generally decreasing. However due to the imcompleteness of the data set- i.e. many countries liekly to be affected by natural disasters not reporting them, it&apos;s difficult to draw a conclusion.' captured-sheet='Goal 13' id='7' />
                    <story-point caption='We can see a steady decrease in Fish stocks which have been neither fully or over exploited from 2006-  2011. However this seems have leveled off, no improvements in stock level can be seen.' captured-sheet='Goal 14' id='5' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{58B2815E-1966-4E99-9DC4-0D89BE4DCD88}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Urban Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{91C067CA-9819-46C5-B142-F757D63C796A}' />
    </window>
    <window class='worksheet' name='Urban Population Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0eppdt516b3fb9121wac01vrpqpk].[avg:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80946477-7986-4721-9201-F1AD5FD12C73}' />
    </window>
    <window class='worksheet' name='Urban Population Top'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</field>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Description:nk]</field>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE2C794A-1937-4F8A-B27E-151B3A74B6BB}' />
    </window>
    <window class='worksheet' name='Most Improved Slums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Value One (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Year 2014 Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</field>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Description:nk]</field>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F08BC143-26A2-4171-BA7E-CA913EF30994}' />
    </window>
    <window class='worksheet' name='Getting Worse Slums '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Value One (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Year 2014 Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Country/region:nk]</field>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Description:nk]</field>
            <field>[federated.0eppdt516b3fb9121wac01vrpqpk].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0BEE023-3D83-4E0C-98D2-3E2514E1A587}' />
    </window>
    <window class='worksheet' name='Disaster Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Country/region:nk]</field>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]</field>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]</field>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[sum:Value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF02A2C1-5832-4EFD-8924-524DE131E125}' />
    </window>
    <window class='worksheet' name='Disaster Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Country/region:nk]</field>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Description:nk]</field>
            <field>[federated.1cc0cy20nfigof1d62o5t0nacs91].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4870D95E-EC0C-4DC1-8075-8380DF324E8C}' />
    </window>
    <window class='worksheet' name='Fish Stocks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]</field>
            <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:ok]</field>
            <field>[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4B761D0-D8FA-49AC-9526-20554E59E193}' />
    </window>
    <window class='dashboard' name='Goal 11'>
      <viewpoints>
        <viewpoint name='Urban Population'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Urban Population Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Urban Population Top'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='81' />
      <simple-id uuid='{5F76F481-A86F-40B4-AC31-408F95B5A101}' />
    </window>
    <window class='dashboard' name='Goal 11 (2)'>
      <viewpoints>
        <viewpoint name='Getting Worse Slums '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Improved Slums'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='103' />
      <simple-id uuid='{66A4FE9A-615A-43EF-B1DA-341659F45DA0}' />
    </window>
    <window class='dashboard' name='Goal 13'>
      <viewpoints>
        <viewpoint name='Disaster Graph'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Disaster Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{98271347-E18A-406B-8209-EBC74C44FFF8}' />
    </window>
    <window class='dashboard' name='Goal 14'>
      <viewpoints>
        <viewpoint name='Fish Stocks'>
          <zoom type='entire-view' />
          <highlight field='[federated.1a2nior0s2bcxa18m4cqc0ty5cxb].[none:Description:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{D4BC7A9C-D9BA-487B-AD7C-98FCA1EA5E16}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{4985275D-20BE-4082-A49F-FB6DC5FE8382}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Disaster Graph' width='240'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='240' name='Disaster Map' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Fish Stocks' width='240'>
      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
      //qff5ujmWOts8Zf/vw2f/FHX+PKleu8v9KlnTv+7fdfGvVuixwKIw3YFwN+eWub6STl2Il5
      /sXxo/zXn19jNq0+72pNFqfrlMBrL53lwsY6v7iTj3KXRQ6VkS6hf/T373C9vcPfX7nN3a2C
      B7fuMn/yxN7LNdOTLdJH/vyvrq7wtfNzo9lZkUNopDPwH3zn6/xB6PNffnSTE+Mp//mtPn/2
      D8bB51xvF/Q3O/zknbtsNyb5/aUJurUJZuo6bRfZ5czMfOEpes93aWpln/DTfwdW4AMkDoJB
      mjgww4fhT/cLhnOOepZgVD8JQg6BJKtuqvkicpn+PfCzc6TDSTV9eAMvaQqQPraDSlfkcVqP
      ikRMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtE
      TAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwB
      i0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtE
      TAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwB
      i0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtE
      TAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0QsG/UOiBxKSX3Ue/BMFLDIxwn5qPfg
      mShgkQiYGWAQAuR9wmCA9UsFLHKYVKECZljeq2Lt5dggI5R1QtGAZAZjHNIxBSwySmYGeQ/L
      +1hvQBikhKKOFXXMHcE4iWUTOOfAAR86NVfAIs9BFWofK4ah5ik2yPBFDdwkxgnIxqkqBepu
      7++6j/+SgAIW+UyZGRR9LB9g/QFhkFSxFjWMScwdg3SCKkv3WKj7oYBF9qEKdYAVOdbvY3lC
      GLhq+csEZnOQjoNLgQRqBwv1SRSwyCcwMyhzKHJCf4DlEAYQ8jrGOGYz1YzqMowEl30+oT6J
      ApYvPTMDX4IvoCwJecDykjAAy2sEGx/OqBNArZpVPybU55tuZXQBm6Nc60KxBc7hEofLUkhT
      XK0GSQpueJ6QJOCqN+dG8W2SmJkZBA++xHwJeY4VASuq2dR8DbMmFsYwN1ZdTAoJ5jJcerif
      byMNOF9fAj8AC8DumwcrcFaAleA8LslxyfBzrsThIQm4dHiKkVYDAAmQgEuSaiBIs2H87pE3
      DQRfOGaYBfAegq8uIOUeKw0bBIKvYaGJ+eqlGVwLqFW3S7rk4b8ISHffp4AfyYz6aY12Ce2S
      J95zak/4eM9u77mB+YdveHChitzyahCwEhKPS/zeQOBc9WddEiDbHQiSaiBwu4NAgktTSGvD
      +Hm4KnDVwKCB4PnYW+ZaGAZaQGmEQcCKDLMGoawB41hyDKhhroFLhlUOB/cvmvjPgZ0Dl/Hh
      h/Jx0dvH/WLYPBaGg0D5+EBg5d5A4Fy1AiANOGc4V7I3GKQ2XBE4SBNIdlcFj6wG0pQq/t1B
      gGo1sPs4vsTMbHgMApRlFWnpsUGJ5Y4Q6ljRqJa6bhpoQNKojv3u4Fp7/Gt+Gb6jIw14c7PN
      /3r3GiUNfvuFWX528y73O5v8xff+kNnUAcYvfvNzBrMX+N2T07z97pvcqc3z/bMnPvudGS6t
      P/ws+MSVgD3yPgCFgVk1CISiGgicr1YDFDA8LXCuHJ4CGM4F2FsNeFxiwxXBMPzEQeIgSYer
      geyR6wOwNxDgDvVAsHcvrxl4j+X9YagFoQ8W6pjPsLKGMYa5OaCJpQ2cG06d8U83n7mRfkvG
      J2b4J6+/zo/f+BXjsyf5Z3PH+W9vvc3M8Hitd+6zYSmUJTtbHe7kBulh/lciu+fZ9cdODT4c
      /kdWAru/EYbv8+FsFIqHpwC75/42HAgocM7jUqtmfxeqwQBfnS6kVJ/LhuEPVwMuGQ4AaW14
      feCRfd/9aB+DwN49vI/ccG9FjhUFoR+q809fw4oUo1Xd0EATS1s4lz7chS/hLHoQIw3Ymed/
      vvkGi4sXmE7hwfIHzM2fGT6BAj/82U85MtbiVqfgg3dXaTbHuXG3wz88c4bxL/Ro7KqT8jR9
      7HefOBDYhz45nPAfXw2UD2d/V50WOBsAYRh8dQqAC8NTBV8NCHvXB7JqVZAk1WrAJZgvhzcy
      eKzMMF8j5AlmTXAzVajpWDVo7FKgn6mRZnD52ptc7znCg/sszh7hF50+f/LqNIScm+sD/s2f
      /jn99Tv8ZLPO9xbnKbpr/O+7m4w30qd/cRnKgOber556cXD3E49eI4Dq38f6fDgY5LgULNSg
      NvFwtZE8tikgzkBdmmLeP/0PHgLOzMwXnqL3fJemluds/vA/UBQF4KhnKcGMNEnADD/82Mww
      IHEOMyMYpEmMT4svmDStXrb5IorosY10Bk6SlMYjS6p099zLub2PnXN7o7hzjkP+urrIc/UF
      fGVM5MtDAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RM
      AYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGL
      REwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RMAYtETAGLREwBi0RM
      AYtETAGLREwBi0RMAYtETAGLREwBi0QsG9mWnSNdWICyHNkuyAGkKXg/6r34fKQJ+DDqvXgm
      zszMF56il496X0TkU9ISWiRiClgkYgpYJGIfG3C/18UHw4JnbW2Vfl5iFthYW6U7yMGMzY0O
      273BM23EgqfTadPt55gF1tc6w69pbG6s0R0UmBnbm+vs9AbYAR+UL3NWV9v0ixILJWudDkUZ
      MAusdVYZFNXFl0GvSxkOujUo8z7t1VUKH/DlgNXOGsEg+ILVTocyGMEXdFbb9PLigFszBr1t
      2p01ghnFoEdnYxMzo8z7dNY3CGYMeju0V1fJy4NejDF2ttZZ29zCzOjtbLGx3cWAQW+btc3t
      6niZsb25ibeDfT/NApsba9U2zNjeWme728fM9o6d+Zx2e4XO+gYH3NwzHTuzwMZ6h51nfL5/
      0mPbWF9la6dXPffXO3QHBfDwuV8Meqy0V1hpt5/p2H3kItZW5x4/f+PXvPrt79FdvkIvbdFu
      r3F2fpz10KCz8oALp+d40DW666u88tq3GK+nn7iR9r1bbA4C7ZU2p45NstZz9Lo9lk5OcqOd
      k/e6vLw0z+Vbm/j+Dt/89reoObfvb9TyrWv0g2NlbZv5MRgkTbp9z8JYYCM02Nnu8vLZE/z0
      7/4vL33391kYa+x7WxC4cf0q5mCtC1m+yfjkOD3GSXsrZK0Juj5jYTyhW8L9zga//frX97+1
      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
      ROz/Aw+6IU9tMx/nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Getting Worse Slums ' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUG0lEQVR4nO3d53dUd37H8ff00ajMqPeGCiCQDWswGBsXDNhhaza2N+2P2b8ie06eJCfn
      bJI98drx2l4bG9NBgJAoQmVQl5CE2qhr+tw8wGuHdcMgafQTnxdPpNHA/d4r3nOv7sxc2SzL
      shARIzkBrJRFKplK9ywi8iM5AVLJFPFwLN2ziMiPZP//n1joaFrEJA8FjC1NU4jIY7H/8F1E
      ZLNSwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIG
      U8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPA
      IgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIG
      U8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPA
      IgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIG
      U8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPA
      IgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIG
      U8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPA
      IgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIG
      U8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGc6Z7AJGnkWWliEbjeL0eum9c
      onPwPnsPvU5dSYCVuXE+P3OZSMrG0aNHufjFJ0Ts2fzNy8189NlF9h46TnR6gKaf7NceWGSj
      WakEodkRPvjgJMurK7TduInL5SErwwNAZm4pR157hbwsOyODXVQ8c5TXmvycvdjO3iO/YPj2
      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
    </thumbnail>
    <thumbnail height='240' name='Goal 11' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Goal 11 (2)' width='240'>
      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
      /wfWEz7XyNorywAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Goal 13' width='240'>
      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
      gg==
    </thumbnail>
    <thumbnail height='240' name='Goal 14' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3gc12Hv/e/M9kXvHUQlCYAAQYIVAKtEVVuOaxyXxEmcxE7s5Kb4JnlT
      7pOb3JSb3NiJ5ai6yHZsy5ZcJEsWRYpiATuJ3ntfLBZYLBbbd2fm/WPBJoASKZMiVzqf58Ej
      cXfKmdn5zZk5c2ZG0jRNQxCEmCTf6QIIgvD26S/9jxJR0BT1TpZFEISbdDnAakRFCUXuZFkE
      QbhJ4hBaEGLYXRXgsH+JaYfzThdDEGLGdQOsRIL0dHXQ1TdARL3xhmol4uWFn7+64nM1EmJ0
      YuqazzRNpbe7nXHbLABuWz8/P3bxmmEmx4ZY9AYu/7uruYnmnpHo8PM2fvD973Cha+i65QkH
      lmhpbaGltYWu3n7C1zvPV8O8/NJLBJUbWkxBuCusGmD7WDef+/3P8eqJkxx77SUefebZG56g
      qnh54aVrA3zx5EF+67c/yb9/80fXfN538TX+8f/+C99/6ch1p/f8fz9Ox+jsqt898bV/QU7K
      Iyc9+brjL80M8k//+TgtbS0cevlHfPEv/o7wavuj5QCH3sF2vL/4088zteh/52YovOvo3/iB
      pmk8/fh/8pn/8b9pqCy45ruR3ha+/t/fRzUk8Jnf/D3W5qfz/Pef4sTFbhLTcvn93/8iaZaV
      M3Eu+fizL/4+T77cdvmzSHCJbzz3Kr/3qY/RNHrjG7FvaQFXOJnXf/49jjf3kuOIYDTHEXaN
      8/R3vodkTef3fvfz5KcnXh4nt7iS3/qN3yLsnecLX/pbQgo4Jrp54lvfJqyL57O/83lKMq4U
      3D0/zVNff4pJp49HPvRJdtcU8eUnnuGP/vCL9J8/zE/OjfFXX/htzrz2UyLpG9i1sQzXzCDf
      feUiX/jMr/LqT7/NpJLJb334AZ7/7pNsuu/jjFz4BS+/fhqDNZnf/p0/YPjCS3QMjPB3f/1n
      bNpxgN/92P389zNPcrF3jH0PfJgP3NvAc898lbKt9/HiD3/A7/3Zn5MVb77h9SS8N6xSA2sM
      zHjYWllAX8txvvjHX+SfH/s2asTHv3z5UT77hb/ki5/+IP/yr/+KAtTuuJd/+9cvs78qi+de
      fn3VmRx44IPkZ6RcM4+f//Cb7H7k10mxGm6qwE7HNHanm33v+wRbN5Tyt3//77y/cQNfeexp
      PvfHf8MnDmzmsW9+75px+lqO8YX/8QV+4/f/iI9+5vNYpSBfefS/+PTnvsTvfHg/jz71zWvK
      9vRj/071no/wf/6/L/Gz7/wXU14Jj62fyTkPF1o7CbmmcPoinDh5krzcbAASUzPpaT6JN6zQ
      OTjB5GAHESXAqdY+slLiKa3cyj/+4//j1x/eybef/Sn3/8pnqC4v5n/9w7/x+U/+Cq+/+N/4
      Etfyr//wvznzi+8y4vAwOTrIY089yZbd95Bkvrn1JLw3rKiBASxSBJdfYd2m3XxlTT6f/cfv
      orpnUFPLKMpKAS2R5LALV8DPCz95FmtyJm77CHJOwg3NdHFmkO++fJoH7o+na3KAPkeQzuFd
      5LzNhQj65nDMeXn158+hRkLEWa7dL63btIcv//UfYp8a5O//739QXfw32JxOjr/6MzQlQpLV
      xJVT3xBTdh+/vakKqxE2lmcxalugrmYtbd09zHo09m0spru/j9mAmYL0eABkYyLlWRZ6+/uQ
      EvIpxEl/Xw9xOWVYdQpHXvkZfl0cmt9JKBi/YhmGhgeZ0wX47rM2EtMycC95AfjUb/0hu6vX
      vM01I7zbrQiwJEncv28Hjz72NF/6/G8iB6MNSHJiNrJzkFH7AibfJC5DMsz2Meg28JU//DQv
      fu8JRm7w/NEYn85f/fn/BGDMEGRe9pGZkgALM29rIUyWVBITdDTsf5jSrCSGx6dXDCNJEnFx
      CQR9bhSdmdS4OOoa7mNDUQYDIxPorpSOvCwrZ1u6aKzIom1ghns+mYas38KjP3iZwpJKNtSs
      5fHvPkd2yQYM0pV5bNlUzc9/9jwbdjxEsTzGj378AtX1DxNacnCmf5r//Of/w/kjP2Gi2REt
      tw4czkWy440UFhTi8WXw6U99iLnpEUwp0fP6xMREBOF6VqmBJT7wyT9A9+Pv87/+5kvozAl8
      9P3vR9Zb+fM//gJPP/pPqIYE/vxLXyI1N4mN6a/yl3/392yvWU9+QgaSbGDd2tLLU9OUMP/8
      D3/BtCsEwBf/5I/5o//5d2yq3QRAqj6IP9lHZkoi8wsrS5NXWMyzT/8rzwL73/cJ8jNykc3R
      jbqouByTXkZnSuBPv/B7fOvJ/4cvIrPvvg+wtqwkuoDmeBTnIF/84y9iNMfxkc/8IbmpSfzp
      H32Bb3zna3wroFC/7yHWl+RTXl6OTpL47Of/hKe+/hS/+ImPD3z6DyhMi0OJ34BZeY7azVtI
      z82EkIfdDTuvKWvNlgZ+fKSFLTVrSZMyWHrpNDtrKzAlmrlvUwl/+bd/w85tdZStyQPg1z7x
      SZ5+7F+oqX+IT/zKrzPzzNP86Zf+hNzCMj77279LflEZ8eZVD5IEAQDp0s0M4UD4jvfEmh++
      yPPNTn73IwfuaDkEIVbcVbt3vSWBnAxxc5Qg3Ki7qgYWBOHm3FVdKQVBuDmrBljTNGZm7df8
      e3BoZXdF28Qw3uWuS2rEz8kTxzl59hz+0Or9ESNhP+fOnmZu0bs8/hC9w+PR8ZUwLRfOMuWI
      tmQ57ZO09Qzw5gfUGj0dF+kfnWR+ZpymMxe5kZ6Qthnbm38/OkLgFnWptE9fWUc3wjUzjdMb
      vDUzv8rMjO0t1uWNGxkdvOFhw0szjM373va8pkb7udDejX3GxjVrUVUYHBu//E/PggN34MaP
      IB02GxFgcHQUNRJi6A3dfN9MOLDIpM1xw8PfTisDrGm0XTzDL06cuvzRQMc5jp1svWaw4NIs
      Rw//lBFntHU54rGjmQvYvqmag4cPrTIrjZ7uHmo2b+HEiddYtPXTPe3H4LfROjBJf283ZVWb
      6Dt7gjmXg1Mdo2RbFU5e7Ll+6cM+JhcirC3Kp723l4YddVddDrrWSM9Z+uyet1ofwHKAb1GX
      Svv0CL43BHiio5mBmcVVh3fN2Fi4RQF2DJ6hc3L1+fwyRkev3/f8jSJLdsacb7+7aM/oGFtq
      Kld+oakMXRXgt2todBRNCTE8eeMBjgTdTM68UwH28/qh09f9dmUjliRRu2Undm+0f3JgcYYp
      n4mSnCs9qTRN5djpFvbsrOPKvUManW3nCXpSycjK4cLxV8ip3Y9/6CyRnFrWZydQvXEzLscE
      qmyht32MzQcOkKwGONzUzIG99fjdc8yFwDXeRVn1drKyTHQOvQZUXJ5L6/kmnD4FTzDC5pJ0
      2rvayUq10tHRgdGchl5bwheW8Ic0tq7L43zfOMkp6fimerGzSNzOrQx09BBZnGLBWECB2c3A
      nMrsWC9xVgtJOeUAhDyzHGwb4kBDDa8cO89D9+6l+8JB2qdVaqurGO9txWiNx5iQSZrBz8S8
      l/mJaQ48tJfTvXYebljH64faSVtebX1drczMLxDRx6ObHWR62I55+xa6Lp7CHB+POSmHHbWV
      QISL504zwBJlW+5Fc44xPbdAWLaSLDuYWNCxviSHyfkw9+6o5HBTK1Y8RGQTYclIlklhNqCS
      nZ2PZ2SQXu8CCfIWegd6uD9Fx+PfOkxVRTaaKZk0Uxj7YoDp6Qk+9rFPYdTBUF87U3YnQc2I
      UVtEkeOYn5xi/wc/SlvTQQyWJOzzSwBEfHP87NXTJJpVSjbu5fzB58gvX4djyc/e6hJOdY9g
      8U+jq8gHoLP5DA5PkAXnIvUb1zDqT2NTnsqZAS++mR6s8UmYU3JxjXShWRMpLS6iq7Od5NQ8
      3AsT7EmP57nnXyUzL5vt27cxPtTDcVkhrJmoTA/iSt3OKy/+kNzcQqYdCzxyz3ZePX6BBIuK
      OWk9O+vKLm9HXX197My5tutQX/s5xp0+vJ4A9+/fwaEjTSTGGZATsinLsDA4PoPLG+LAznUr
      YnP4hZfZ8chDTJw/SMraRl7+4Y8orygmoOqJ8ywyb9SxYV0VXW0Xo9tZdhnT/adJyVzDzOwC
      9+3bwdGmc1hNOjIKKxnvPo4hPov83HQ6utpIyUsFzyxOv4ovpLB78zpOnO9863Pgo8ebIOym
      o6uDgdHoXso22MKcJ8L55nY6OjouJZ8NG7fSsG0rrlkHm3buou1ME0MOH+uzoz20hnoucrZn
      ig89dACLWSYcVtE0FWSwj/Vx8FQ7H/rg+7GaTITDYdBU0K6tU/uGR9HLEj7HHCn5pWyoqaVm
      QzXV1Rto2FHH0OgoOknC6ZijbWSGA/feQ33dRkrL17Nle/3lLp355RuxD/fQ1TdOWZYRh8uH
      zmBixjYKgDE+E33QSXd7G+s2bF7eccnsbNzH+ux4BmcWkWU9szYbUzMu7t27l9L87OusRZX5
      +XkkSce0fYbS0nVs3V5PQaLG0KwXWTZgt106rNdTt20njVuqcC4uMuecQ5JlZqdm0DSZxj33
      UFGxEV1gge72Vio21jIwPookSczOOsjIy0GLRFjyeigpLaNuWz1rcjMul2RtxUZ27d5PJODA
      vrDA/j17KMnLuHx47Zh3giwzOzsJRgv1OxvYUlbAUnARSGdXYyNZadHfc6KzA9USjykunsnR
      YbLyimlsaMRq0dE8OMSD997Dzi0budTXZdYXZN/uPTSuT2DeWoF7updzzYNsr81kfGQRSWfA
      YZ8CfRz333cf5eVrqa7ecLkGlmULmZkJBAM+gmGFwtIKdjfuQlaWLi9fUkYujQ2NZCQbGe1o
      Y8veB9m5bRPaDdxmNtA/jEkno/lm6epqY93W/dRv24qkhaLrRZJwOFZ2ElpNUWkluxr3oNM8
      IOvYtfcAmdbwle1sZoy45HQa6htZn2emo2+QDTv2c8+99+Gc6cdgSeLAPQeoqlxPddVGaivX
      MTi4vO3PzdLZ28X23QdWBljTFM6dPk5nRwenLrTywPs/wr5du6muqqa8KI9z58+SW17HJz70
      MDvqaqiurr40Jp1t5znX3AYGAzpDHFZlHn3i8l5OUzh0pAmLFOLkuWbK62poeuUlXnn1IGvX
      V/PS4UOkxuk5ffo0yYU1jFw8wquvHiS7ZD3DvW04fdHzm4rSEjQgv7gY0yq7n/Wl0U4kxaUl
      VBdn89prRzjd3E5Sciod504wPecCQJINpJoCuHWJJKdmk5OeBJJMafGVvfTWTZX84mwvJdnR
      jiOSTodRrwNzEuvz0kCSKCktISXRyKGjx+geGkVvjsc1OUDTyVMsBcPLyx5metqBrNMhAYlp
      ybSfP8mUR2JdThJIEqWlxatsBgrTUzPIsg5JAllvwKiLLnRFcSanB+fIS7GyrqQUJCgrLSEU
      imAyGrDPOohLyabrQhPjM3OrbmSJZhOvHTtG7/DE5c+mbVPR+a0YOh6fb4ymUyeZmXMDkFdR
      gUkNAwZKSq7t7llZkMuLBw9z5mLb5Z1DptXE68eP0dS7RFmGkcw4PS6MmHQpFJenIUlQXFyG
      0WRaZf6ghfxoejNSyIvdHVhliGsVrFtH06GXOH32AmGg7eJFwm8y/Nr1ZUQ0SMsrpay0gvaT
      r3L67DkCEZiyTSFJEtJVBRvr78CxFD2FzM6M5+Sx47R296+Yrk5nwqCXsSTlkHvVduZ1zXOi
      6TjDc7BxfRmdZ47w2uFXSc1ei9FkRJYADCwtTdDWM0D52lJUIK+klNKiUk689sptvIykaZw8
      eoiNjQeIN6z2c9zwhLjY3MzmzXWr/qi3k9sxSudkkPpNKw+ZruZw2ElKSeP4q4fY9cCDq+5Y
      7kazs3ZS0tI5cugV7rnvYfQxUu4bFfa5WQzrCNh7mVOzUfwO6jbV3tC4kaAXp0dBW5pgwmdi
      S2XZG4bQaG5upnZz3du+lPP60YPs23v/2xw76rYF2OeeY9ajUpSbecum+c5S6OsdpHzduuU9
      4fUFfW5a2jsoWVcT7dMdIwIeF80dXaytrCU9Ke5OF+eW0zSV7o4WJGsalWVFNz1uf3c7QV08
      1evLbkvlseBykpKc+ktNQ3TkEIQYdvsPmlSFwbGJtx7u6lGuvi6naXS0nGV4cgbbzLV3K/lc
      dqYXrlxjtNne/PruzRgZGn3DJwojoyO3bPpXJhvC5ph/y8FCPhfHTzSxsLjAnOvay2FjQ6NX
      Xf9Wsc3Y3zj6raUGmZl96zLfDE1TGRkbBiDkdTF/g08qGRwdvaXluC5VwWZf/ckwN2rwl9h+
      lubsOBZXXk+//QHWFIZWBFjl9aOrXSu+NMqV63KRgJv5kERJftaK4fwuO9Ou2/NImpHh0Td8
      ojL6Zj+Ab46DZzuu//0bvHb0KDdzvNPZ2cKGuu3EG1de+RsfHuWdeBLQ0UNHb998NI3R5QDf
      jKFbEODXD13/kU630tDY2w+wZ96OY5Wd2spH6qgqL7z6cz5w//s4cvgEIc1NfHwKU8PjPPir
      v8qzzzxJSdlG8jNMjM268bh9PPzgHg4ePEJyUgIRgxWfY473PfIwR44dZH/jPgC8rlkudPQy
      a5tj197tdHR0YknKIlUfZGzOi8fj58F76zl05ATJ8Wb8RM/Jxob66GxvoTC3kNHhNvBMc2HE
      TXZmBiWJKq0Xz+DsVyhYuw3beDs5afE8/r0fU1VaSAgra9INjMy4WZiY4MDHP02KEUb6uxi3
      z+GP6ClO9NA9b0LvdVDdcD9jHaeQzPHYllur1Yifg4deIyExgUVvkM7mU9iXQnh9YTZX5NLS
      ZyMzM5tcq4/Oth7yUxIY6T2FwZrOhvI1tE76ebihnNcPdZCWqjLvDZORkU1Pdzuyzsi27VX0
      tg7Swznq9z1A65nXyV9TxMWOfvRKkC177iMrXk93VwczSzo2lyQxHk6jr+0kimwhv3gtAa+T
      pqYTzDkcPPL+D9Le14VnbIBOdwiT187ane/D1nMSVRfHnMvFh9//fmCRbz72M4or8pAsachL
      IywqVmpq6nBO9bOwtERcahHGkIOFgEp2ZhYd3e1gNrB95yZ6ujvxzCUyNrtIamYuqtuGOwy+
      gMba7ASGnR7S07LYvGE9EtB8rolFj4eEzDJsvc2k5OQyZrPza48c4MWDx0hLScK33EQs++y0
      2hMIHH6RpJw8BoaGKC8tZtEXpsQQZkhKQFq0Ubk92gAU8s7x88OniTdB2cZGzh7+EfnFaxke
      tVFckIGUkI054MATkfGHoTorwslxmWR1nvx12+jo6kAfZ2bbtnr0qo8XXnqJtIxc6urqaDp6
      GHN8EjWbault7yNcOE3X5AIhr4e9u3fw3AsvUr6mACw5JEouXH6VnIJi7COdaHoLis7K/oZt
      y+Vc5NTpk8zMOHjg4YfoaD7HostJ7rotTPdfwGxNpryylpGus4QwEtYMbCxO42L/FOH5GUp3
      Rm9D/dmLPyItNYeh4cG3roElUxyN9Y3UrsnGE4aswjLu2VvPUN8QZr0OXdBBd0cLhZv207Bz
      J7K6evP+vHMeDQjO25GScqiu3sCOTTX09w1j0svgd9DV2Upp3X7qd+zAYoxe/y0sKWfjxlpK
      CqLXWJMyCjBJYZY8HjRJprZuB7t2bGLRdaVLSXF5Fbt2Ra8Pjk/Oc2DfXtYW5l3aRUWvrUoS
      s9N2JJ2Brdvq2VFTiXt+lqAxg90NjZcflOe2j5G1ZiONDfUkxZkY7B/GIMsEl2YxxGVi0oPP
      4yG3oIQNGzdTtbYIgzmBA/fcR2bytU/eWFhS2Ld7Dxsq1lFRWcOuXfXELS/n5qpS2nuH8YZ0
      2Md70RvNWIwwOu0A2UBFZSX19Q3EmaL73JzsXCJKBI/XhzkulcbGXazJSSR0+amby9eT6ypw
      eRYJawb27NpFaoLxcnmKyqrYu/ceIkt2VMnA/v0HKMyMZ37Bi05vwTYzjNujsG/XbirWraO6
      sobduxqwLDdXj8952L93L5sq1zI8OogOiTnnDNm5ORCJ4F3ygAYofuYXfOgMVmy2IeKSMmls
      aCQnI56Z/nOs3fEgDfUNvPHpStbEdBrrG8gtKKSxfhcWQxhJMlC3rZ77D+xmvC96yWaqr5mI
      KRGj2cLk1AjZBcXsqm+gILuAxvoGAoElhsYG0UkSjrlZVFnH5q31NG6txeuTqK6qZld9PSY9
      yHoTGWmphIJ+FpyTpGVXsmfXLlLiTQB0DvQRZ9QhqV5mFnysq6pld2MDEY8XZ1Bh7+7drCvO
      ZHRoGkmScThsDPS00dY9gDEuifqdDdSuzWZ4apYlTwCDDON2B7mZ2UQiYbw+P8Njg8iSxOyc
      na6BKfbfs5+ttRsuN6SZE9NobGiksCBnlQBLEFx00XTqJE7PyjCaTNEFWVdRTljTSMkpobS8
      ir4zBzl1+jT+MCRaZY6fbKJvePLyeDO2KTRA1smARMjn5lxrJ+sqlq+95ZZQVlZJ58mDnDp7
      Bt91+lP7/X7MZjMuu+NNr+ldkpFq4dXXj9I5cOnwTMU2bVv9WqcxHsU1xomTJ5le7pOdkJ7H
      SO85Tp46jcsbpHx9GQqQXVAKkSBmk4lF5wwh2Yp7oo+eoTEMy9fwdOZ4XJP9NJ08jScUITVR
      z9ETx+kZGifFJHHsxKnLy5mcW87whV9QWLGRkrIqZE1Bb02mOCtt1eWKRBQMej2zN3S+ayDs
      d3PiZBPTs67Ln470d3L06CESMovRGwzoZRk1uMSU041OF92xJMbrONZ0gv6RCeIsKseaThGI
      RHcShekJvH78GC3d/ZSVrENDoqSoHH8wiMVkZHZuBtBQA4tML3gvT/NqmSW1tB17kZOnT+G9
      gR9U0yJcONPEq4dPsm65g0du+UYsagBZZ6S0cPXHD5WXrEcDSotLV2z0ZlOE46fOEIyAqgSR
      JAOa4scXimNhtofjTSdY8ES7t1asrSCsaCSl55Nx1c4QIM2k59iJE/SNzFK6tiDaT6CknPKK
      jWysLEcK+TjRdILOUSfZpjDzSwF0ej2gEVFV9HqZWfsMZSXrQYqWtawglVdfPcyF1s5V+7Lf
      klZoNeJndiGIMTJH30yQnZuq3tZ0boc5h52E5DROHjrEzvsfxHK9ztLvcrYZGxmpSRw+dooH
      DtwLLPL6oUH2Hai700W7Kb3Hj5C0bT854gGdwC0KsKZpDPZ24NHM1Faufcc7XLyZkN9Dc1sb
      ReUbyE5LutPFuWPmZiboG7VRV1eH2aADIiw4/aSkxs51awCfawFdYkrMdJa53cR1YEGIYW+5
      Hwv5XHjesfeNqCw4XW892B2wtGCno2+V2+jUCAsLSys/vwmepUVCkV/uAs2Cc5UnAl5vWNfd
      9/6p6bHBaIPdTbhmmTUVp+vW3zp5t3vLAC9OtjO8fM/vjRrubcb11n3NV6HQerH9TYdwzwzT
      a3v7P1TI66Rj4MbvZ73k1MVmqtaW0NbWcu1DAxQfLa0D1x8x4OJ8z5tf/xsc6GTBd/0WnNbW
      llU/980N0zsZvVGh9eLqw6ympe38DQzloeXCyo75VwvOj9A2cSVEU12tzPrV5Xm03PADBDTV
      Q1ffDGty0m9o+KXZEQamFq5dZjXC+fbOG5zju8cqr1ZR+ekLz5GWnEFiZiF5y40+Y0M9jNlm
      0VtSKEkIcH4yhDm0QNWOAwy3N6FIRmo2bScl3oQuCKoMB3/xPHGJmYQwsb9hG5qq0HTidSKq
      RF5pFZ75UfxeP2vW1jA10EkIWPAGmRjqZmDSgcEcT21RCkc7JsjPyWVTVTm9XRdpnbdgadzO
      /FQfS/4I8Wm51FWtJexzceTkSawpeRQkGRiZnsNoTaSyIIkLPeOkpGWSrDk50TyAXmdAH5hn
      as6NbIqjpiCNcz1jZOTkYVXd2Jwe4pIy2bqxgjnbOL293eTklaMQQQsscqjpHJb4RLZtqmB4
      oBO9bpHkzEJq1pcybxuhpXeM5PRMsvRujjf1E6eXMIQXmJ5zI5ni2bmxnBOnzmGKS8K0vI7P
      nDpOWWkpLZ19JCSlsm1LLTKgESHstvHc683kJhnIKKymsiSHwZ52zkyp6Bt2MjczzommE2h6
      C9sqCjl2vgMkHXv37sakk7l45gTesEZ5RS0uh40TTScIY2BX3XpeP3kBSVOo3bGHsa5TLPo0
      srMTONHUjjHJgD7kYsbpxpKYRm6inoGJWVIzc9HPd3B8XEf8rm2U5mfT0XIOz7SL+tqNRNCQ
      lqZ45lAbOeYwckIagYVF9j/8EK2njhBSNArLN1KSl8HwQDu9PYOUVZUx3t+Gokqs21hP0DnG
      pH0OU0J0voNTs6Rl5LI+y4DXr+F3z3Pq1Ek8YY37GqPXWt32MU53DSPpDNy7p/Fd/8yoVZfP
      mpLJ7j17sU1dqalUVUXSJLr6+gh6F6ja3MjuzeX0TTnxef1o6LAsv/7Dt+gipILBGk9jwy7w
      RbuA+eeH0WdUsm/vfsaGu5mZHKVyUwNpBh8RYza7GupJiTNz6vwF9LJEx/lzuHxLaHEZbKqK
      3mhfVraeTVt2UJBmxq1Y2LN7L4uzo0D0GdRLIZldW2o5c/48Olmi7dw5FgNBQqEwZouFgqIy
      NtZupqKkkKn5Bfbu3kNCxMXsohvJmsGmynLOXjyHLEmcPX8KFUjPKaS6egM1FWW4XE5URcEf
      8KM3WtDLUFK+gd279zFnjz5qJhIOEgyHMZutFKwpYUNNHZXlRUzMudmzew/x6gLnW1vYsHUP
      Ddu3oteCHD74AonZZRglhUAwhMliudwY6HI50cIBsksq2bN3J/ahaM+24tJSNtVtp6wgh/Ts
      QnY17sIfdHPxwmk0WUfQMUDrSPSw1OfzoqgaVquZ5IwcdjXuQucP0NLRybbGvRy4Zy8dF88y
      PD7Fnr37qapcS3XVJqrKi7lw/jwSEufPnCUQCBAOR7BYLJSUlFOzecfl+6DLStaxbecucjNS
      cLpcEPGTXVLDlrWppJVsZl2KBafHQXP7GLLOyKmmpuhylK2lZsNmsnXzdEx40RkMnDjVhKaq
      SJJEZ38voaB/eb5W1JAPlzeEJTGN+voGcnV+bMudlJrOnsFk0OEcbmbA8bYOA7ySFnwAACAA
      SURBVGPKqgEOBYN4Fx0oLF/n0jQ6e4bYsqkanfSGNmYN1m3YyOZ1OZw637ZyYlcxxKUyPzWM
      Z3EWZAvmxBRS4ozozXHMOSbxuhdY8ATIzc6hZvM23vfwA5h1MlmZV+5o0hlN+BZdqJKeJecs
      Ab8X31VPoMnOjna5zMnOZWPddt730H1YLUns3r2Hse52InoDniUfkUiEkM+Lxx/A7goQZ9CT
      lRm98T03t4it23fy0L33rLqCNGS27diNxe9g1LHyMT16UyK7d+1moruNgGwk7FkkEokQ8Xvw
      +APMLvjJy0xnbHycRdc8imxi08YaxseHUXVm6nftxjnVz6L/zRsVDSYrbld02lfLysqO3lB+
      z0OszY52SCksraBhazXHT526dtiURAaGx5ka7SchLY+MzEz0sgQY8YfcRCIRsnIL2bq9nofu
      2098Yhq7d++mp+UCOrMV34Lz8vyt8XqcTveK8ly7cuIpLimifsd2Gnduu3Z54tMpXZNP/bZt
      1G+ppbNvjLqaKmRJIi4pnd27dtPdeu7y8Eo4REQJM+zwkrp8WSk3O5uy9bXsv/8R8hLf/e+T
      WtEKrWkq3/3+M6yv3Erdxg1E/C5CugQibjuD0wsUF+YRp1fRLKmYVB+LYR2hhWnG57zUbdyA
      LIHXtYAhMQWvO3q71ILTRUpqdENyzdkYmJijrraaxcUrt1MtOKYYtbspys0hOTmetpaLpOSU
      kJtqwa+ZSLQs/xiaRn9PO/EZa0izSrR09VO7aTNmgw41EmLJHyQpIQFVCdPW2kxaXin5GUm0
      tTaTUVBOfmYq48O9hA1JFOWk0tLSSmlFDXE6lRAG4i1GIiE/LS2tFJZXkZUavZn/0q1fCy4n
      KUkpDPR2EDEmUVGcx8Kin5SUhMvDXJr3pflNjQ7gw0pJfjotza2UVtaQEm9henyQeZ9EUV46
      JksCIe8CGOMZ7e/AmlZwuf/3gstJUpyFxSCkxBtYcPpIWS7XUF8HhqQcEow6UlJTcLoWSE1O
      YaS/iyXVRPW6UiRJYsExHb2MtHkTniUXKcmpuJwuklKTmRrtZzFsoLKsGNdVv8nU2ABezUJZ
      XgYXmi9SWFZFRqKJiy3NFJVXk5mSwFBfO8akPAqy0wCNrraLZK5Zj44wqXFmnEGZBJ2fgJyA
      zu9Gl5BCyD1Le98ImzdvwWLUoWlhFl1BklPicc5O0Tc2Q93mTSzNTTHm8FKUn0VSnIWLzS0U
      rd1AepyMO2xA8zvpHRimcmMdSRYDzsUlUpIS6etuBUsa60sK37Eg3SmrBFhjaHyMsjVFd7ho
      giC8FXEdWBBi2Lu9kU4Q3tVEgAUhhokAC0IMEwEWhBgmAiwIMUwEWBBimAiwIMQwEWBBiGEi
      wIIQw0SABSGGiQALQgwTARaEGCYCLAgxTARYEGKYCLAgxDARYEGIYSueSrkUdDO0cO1jUmuz
      Y+v1G4LwXrEiwAMDzbRHrjwPWEKiNrsORVHoH+gnNTWN9LQ0BgYHKC8rJxgMImthxuwLOOfn
      2bm1DlVVmXVEX4acnZX9loWwzdjIyc4BwO2OvljLbDGjk6+8yMgx5yAjPeOXXmBBeDdZ8Uid
      l1/6JrN5Vz1kXNPId5RQtq6Y5174BevXFjLnDKOXQhi0EJ6lRUqL13Bu2EWeVU9xUQ6jk7N4
      lxYwGGBD3T5S4o2sKVxDa3srCfGJKEoEq9XKxOQkKSkphEIhdLJMMBgkOTkF24yN9LQ0VFVF
      0zQkWWJqapoH7rv/Tq0nQbgr3cA5sITVaqC77Tx12xqYGh3EnJKFSa9nbNpBerwRzRhPZnYh
      YZ+HwdEJfI4RZubdZCQZaR+aRFVV/IEAo2OjgIZ91o5erycrM5NgMACaRjgcRq/X415aJDMj
      g/z8fPr6+1BVlUgkQuZVj5YVBCFqRQ08Zuulx3v1ObBESbiIzIJSbONDmBJSyEjPYHx0iJHB
      bgqLytlQWcHQ6DjJSYnYZ2yYE1Ixyypms57mzgH2NuzEYDAwOjZGQkI8VosVv99Pc2szO7fv
      REMjFAoRDAZJSEjAbDIzOTWJ1WIlokQwGo14vT6K1qz+7ldBeK8ST6V8G8YG2rk4MMMjDxzA
      MTEAiXnkpMStOuzJIy8y4pT4+Efex/RAO5GEAgoSJV4+do73P3gfHRfPUFRVR5J59YeQ/+wn
      z/HgBz6CUQaI8NyPX+QjH/rgygH9Czz+48N87pMfjf7TOcnh9gnev3fnikFbzx2luWcYnTWF
      /bXFNE8G+cC+7Ze/nxvrotMhsXdL5ZWRNIUTR15hxL7Irr0HyIiTCWImLWn15Qbwzg5ybGCJ
      hxo2rfr9YNd5LDmVZBi8vHy6m1+5by/nTzdRVpbPCyf7+NSDjdhcAfKz0njp+efZ++EPEwdo
      aoSnnvkWv/ubn10xTU3TaDt/nNa+cep27qa67Po7fe/iPH5MpCfFX/P57EgbJ4d8fPDelevu
      Eo99iBMDSzzYWAtA17mjyDkbqChY+X6nMyebqGto5GYeMz/U3oTbWsqmspw3HW7FIfSSd5aW
      vh9f9feTm5jte0GEw8cvUpascK53lDOt3WQkWS9/q0ZCdHd1sLDkY3HezouHT7Chai0yIEU8
      nDjbwtRQO683nWHRH+HEySYMej0LDhvd/YOomoZz1oZ7aYnJmVmmp6dQNfC6nXR29zA6OYl9
      epJARME+PcaiL4RrzsaSZOF9exoAcMxM0NPfh80xj6Yp9Pd2Mb945Q0SredaePCjn+I3PvpB
      sgvK2F69FjUSpLOjDZtjgaDPjd3hoLOrk8DyWxOH2o4z6k/g4x98BB0qxw/+kGdfPMi0Y4Fw
      wEt7RzveYLTtZH52iu7+IcIBD7Y5FwGPC9vcAovzdlo7OvEvVxSK18mplm4GOi/w+snzhDWN
      o6fPkJyawz3bNzHQdoInvvMswxPT2KYmmZ+zMTA6iSTpeOjAA6iRAJPTM/T1dOFefj2Hb3aA
      w23TfOrjHyPeKLPonMXtC+JdnMfp9uF1O2ltb8ft9XPi1ef5wfIyuJ2ztLa3seQPkZpbxo6N
      63HN23HMOejq7UfVwLM4T2t7Gy6Pn0jQw8TUFJ09vURUDbdzFrc/hBIJ0tXVyZL/ygsBz5w8
      yaVWJSXkp7OzE18wjN02STCsEPQuMjO/iN/jorO7l4ii4XHNseANEPS5aWtvw+n2rro1rghw
      fNhHjaP7mj8ARfHz/Wd/ROvJU1yalHtxlpHh6egP3NfFtCP6pjpNCTM0Oszg8Ojl6S55rryC
      MxAIEAxeeR/K4HD0nUKhUAincx6XYwb/G95oOj45seoCvPNkZM1Pz/AkM6N9hEIBvv7t77AU
      jAAaz3z9a9gXPTz1xNdwB6IPyr/0MpqcNWuxTwzROzzN+3bVMDg+RliXRHhumKd+8FPsox18
      +yevcu7oy/zTl7/MwPgMABG/ky9/7XG8Pg++oMJwRxPne6c5+OIPOH6+nZd+/jNCaoDnf/xz
      bEPNfOO5X+BZcqOo8LMffJ2B6Xm++fUn8IYvrdQIXR2ttPf04bINcuh0K89/90nGnF6GR0bQ
      gL6eLiYHWnj2lRMAZBWUM9r2Oj8+eIy0tLSr1ofCo4/+Bz6/l6987b+YGW7j6R++hMvhIAio
      YS9PP/NtzBYzX/nqfxAJehmftgNQWrmBkb4eekYcvH9HEYNTMxjMKaiBeX780tFr1rqmBujo
      HuCH33qUWb/Kcz/5CRGfg//42lPMO6f5xveeA8CcnA3OQb7z3M9ITE6j6/xReiacjHef5Xzv
      KI8++lVC4QBjE1NXT52BoX7CgSW+9uTX8TlGeOl4M22nX+Mnh5toOfESp3smGBoaIBzy89Un
      ngBgfGwU+1gX33zu5cvT+eaTj+JYXOSJp55GeePrGTWFJx5/lAW3i8e//i0mes9zsmuUU0de
      ZGxmlq8+9gQLjjG++aMXLo/y1BNfxR0IMjI2vurWuOIy0vUoSgSjScUXhAunj+Kac+Fx2bA7
      9Hzs1x7m/PkzVK0rZmAyj8DcMFaLEZDpH+hFVTSyMxJpvtBM0JhATUkuYcnE2eZmaqs3EAl6
      GOzuoGdkkqqaDWTIISIZXqa7zuDVp1CZl8rUop/C/IIbLe5tJPPxj3+CkfExJh2LTDvm2F+d
      Q+ugjV1VWTh9Mp+p34lnrAuvHEdaWipVFdEaWLamYYwsMr1o4oP3b+FHLx4iLa+UqdE+Krfs
      Yd/2Iv7tP79Fdq6Jj3zqc9SVZNJ7/nVcsxMUrN/K9i11nD59kQ21dfzgUBOpeTUE5kZZCulI
      sUR/ypGBHnYdeISaZDe9x/sZGBgmKaBHU4I4PWHiUnSrLtXuex7gp68cYlSfROH2EiqqN1NX
      auSnLdHXl8an5fM3f/W3DHed4qnvPMc9lQWoWhG5KToUUxY7tu2k9fRp2vo6adj/Puorc1kc
      b6Xl9GvUbNlPstXCfXsbOX26iYpt97OuKA9dXC4E7HjVLO6tWsv3X/oJWWWbL5cpPz+fjOwI
      JQW5HJHN7Nq9m4Xuk1x9pldUVsW2rdu42Pk8ADpTIn/253+NfWKAx57+Bvurrmr8lGQePLCP
      42dPk792M+W5eYQoJDs1np89ewpDfCrzrqvfsyxRt7Uew5SOuYCf3vNn0IwJzDqj71cuXVvF
      nj21tH3rR5CYBGqI4dFJ5Lg+1IgfbxgSjVdNLuJnaGIKc1I/kWCAss31fP+nR5D9i3xkm8z3
      ZuYYGJ0koJqA6GH9/Qfu41DTGZKyy6mrrlhla7wJ3iCM9Lfjcszi8XpISkkn3qJjzukkPiuf
      wrxsmo68zMyci6GxaZaCOkJ+NyH0aJqG3hRHw7YtDI1PIRtM5BUUMzdrw+Px4vN4KS8uBiA3
      Lx9J00jNzKOuupJwJIIs3z2dxixxiQz09LB9+07iDQFebOqkNC8NMFJTmsFjTz3JoAuKMxLf
      MKZEbrKeuYCOlIx8us8dp7yiitIN2xk4+xL/9fiTbNzRCEjEWc2Xx0rNKWWm7zTf/eHzuPxh
      EjKLme44Sk7JBliaxJJdirxcza+v2cqh57/BT185gqLCroYG/IEg6VkFxF16jyl6qqprqalY
      d3m88fFR9AYTfr8XbZU3+471tfDYU0/y6vELrK+sIDe/hHNHX6B50EV+YpAnv/4kWmo+jTv2
      0fTSd/j6t77NUkSjbvcjrDHO0dTey+j4FCajAa8v+ipBSYJUYxifnEBS3louHj9IdeWV825L
      Si5zg+c4cqb5hn+bxZlhvvbkE7xw8DXK1lWQlp7BKy/8gGPnWkFTGR2fwGQ04fH6yS4s5sLR
      F2npGcbr82O1xmE2XO9MVcPr9WG2xmMxGQCJkb6LPPr4E9Tt2B0dRDbRsL2WQFghN68I4/Lq
      Dvrn+c4z3+Bo6yANmzcQiqjkF6whLikT3eIgcuoaUtLyqSrLQVEligqvnLePjo9iNJrw+lY/
      hF75biTXKGrnd68eBF3jX6EoCvPz86Snp9PS2kJcXBxJSUkAGAwGHA4H69etp6+/D1mWSUxI
      RFEjNJ04QfWmzaQkJiJJElNTU5QUl6CT4UJrGyVFRbjdbtLS0rDN2KhcX4nVal2trIIgvMEt
      aYW2zdjIzspGeuOrRwGvz0uc9fotlYIgvH0ra+CAC222/ZqB5MLdd6RwgiC8uRUnlorLj/fY
      8JW/4yMAaGqIs6dPMWmfvzys3W7DZrff0Izsdtvl/w8HvXj8fnxXv5kbCPsWcL2x+VkQhOu6
      4VboUDjAoSNHKBwbp3ZDLSajxtz8HAtuDyX5hYSVMPkFhQz0dBA2JJISZyQYCDA/Z2Pe5WH9
      2lIG+rtRNT3xVj0dnW2YE8vIzzYh66x43bP4PQvU7PkYyZbVW0oFQbjWDQfY7faw56EPkmmV
      ONvahRZ0olcD+LCiDy8RtuRgmzlLc/M5qmu2Mj3kwBCXgRzxkWjRY5udxaI3oYXn8IVlStdV
      0NU5zfTYOKnpeRQUFFKYczN9VQRBuOEAp6VlovYPsxDWU7+pkpHxMQry8rDPLyApIfLKKnHP
      jbOnoZGwZKakqIDpGTtzNg9ppRvIy0zDNj0O8WsoyExidHKG9eW56Ax5hBQZk6wQMqaRlXDD
      RRKE97yVjVihIIrzqovZEuhv4J7e1Yh7eAXh9hI3MwhCDLt7ujcJgnDTRIAFIYbd1hYjTdNw
      Bxdv5ywE4T3ttgZ4KeTmv9u/iV4nWpZ/GbKkQ9Xu3g4ud3v5AHSSHkW7dW08d8sy3/ZkGXRG
      DDpxffeXIUsyqqbe6WJc192yMb+ZaIBvXQehu2WZb3uAHePTLLk1crLjmba5KFxfhNWsxzfn
      xBWSkQNLhCQThcXioXWCcLNueyNWWn42hkiQOacHVA1JktBUhempeQKLLvxhGSXgv93FEIR3
      pdteA0/2jZK1vhjCIWTVj33CRXaahN8XZsnhIT0zBbjzhyKCEItue4CNRj22wSkKyrKZmQpT
      WJyOPwgbtq8nEAij+LyEJNPtLoYgvCvd9gBnlxZebsQqWmsBIG65TctiNYFVhFcQ3i7RkUMQ
      YpgIsCDEMBFgQYhhIsCCEMNEgAUhhokAC0IMEwEWhBgmAiwIMUzc5ycIb8vK90fd9jlqGooS
      QlVCaEoIkxIWARaEO21FMNUwVk3DoqpYtQhmDaxqBCsa8bKeeEnGojOik2QRYEG4Xa4NZhiT
      GsKqaZg1FasawaKBRYsQp10VTNmITpZBAnQ64M3vpRcBFoSbpGkaihoiHAmgRUJvGsw4WU/C
      G4Mp6UC+NQ+5EAEW3hNkSULjJp7IoWlElABqJIgxEiBRU4lXIiRoCvFqiCTZRLwkYdWZ0EmG
      aDCBm5nFrSACLLwnqJq64hE4mqYSiQTQIgEskSDxmkqCGiFBU0lUFZJlPUk6AyY5+kJvdAai
      h7TmaC2qKYC2/N87QwRY+KXJkozEyndD3x00whE/asiHSQmSoEGCppCgKiSikSLpSdQZ0etu
      9rZW+Y4G9xIRYOGXpmrKXfPQPVVViIQ9WEM+0pUwGWqYbElHhjEeHdLyOage5Ks3fRXUmyy/
      dHe8QVMEWIhZ0VbeIASXSFVCZCghMlWVHL2JOJ0R9DrAvDy0DNwdO5lbSQRYiBmqqhAJebCG
      fWQoYdLVMDmSjnS9GZ1suGUtu7FEBFi4K2maRiQSRAotkaaESFfCZGoKuToT1hW163uXCLBw
      V1BVhXDIQ9xy7ZqhhMmW39u1640QARbecdHaNYAU8pAWCZKhRshUFXL0V9WuelG73ggRYOG2
      u1S7xl86d1XC5CzXrrLOCDrjnS5izBIBFm4pDY1IOIAcutQyHCZTU8nRmbDIBiS9WdSut5AI
      cAyQJR3cdR0lNFQlQkQJghrBEvaSoSqkK2FyZT1pOjOyzgI6y50uaJQk3Yk7AG87EeAY8E51
      lFBVBUUJoakRNCWEUQ1j0TRMmoZZi2C+9P+qggUNi6wjDpk4vQkjEtI1jU3q3RUY6W7bAd4a
      IsDvYpdvZ1PDaGoEnRLCrCqYAYsawaKpmACTqmDRVCySTJykwyrJmHQGdNKlu2fgTTeVy/2C
      hXeaCHAM0TQNVQ2jKGFQI6CEMKsRzIBJU7GoCmY0TJq6XEtKWGUdcZKMWdZjkHRIl7oA6u6O
      roDCL+e2B1gn69BJ7939hIaKpiqoqhK9G0ZTo39qBFlV0GsqBjQMgE7T0Gsqek1Br6rol2+A
      MyJhUsOYkbDKBuIkGYuswygbkO6KIEqiBr5DbnuyFFVBliK3eza/NE3T0LSVQdNUBUmNRIOm
      qeiJrjSDpqFb/syAhh4JPRp6TUOvKRi0aCj1SBhlHUYkjIBBktHLMgZJhyyt8kxBSY7+Xf3V
      9Q5RtcjdcZ55l3Tsfy+KvapRi97HqWoRVFVB01TQlv+rRqKhUpXl8Cz/aerlAF7+/JoARj8z
      SjqMkoQRCYMkRcMm6dBJMpIkXbuhvjvbRIQYc9sDrKoRwpqCpl5bq8napVpt+fCRq2s15XLt
      Fa3V1GuGNUgyRknGcE2tpls+x5NW1giihhDepW5rgONUlQfckxhkYzRwkoxB1qGX9OhkvajF
      bpR2NxwnC3ej2xpgGY08nQVJ/8aucm/jBur3MnEEIVzHO3AOrDE560ZSwgw7PFSU5pIeZ8C1
      6MUab6Gjf5KgbKR+XfbtL4ogvMvc9ler2OzznOq2k5eTRmGyiYgmoaoKF1qHcSkydesL0Kvi
      EoQgvB23N8AatAzN4Vp04/JHsHkVsuP1yLKO0twUAFxOF4mpybe1GILwbnV7D6EleKh+PdPz
      AeLkCEW56SiRMC5vmGGnj0T9PDnxBtZlxd3WYgjCu5WkadEmznAgjBK6tR0uNL8T5exXVmnE
      Em7K3d7X+G4vH0SfQqnewu37Lllm8XpRQYhhIsCCEMNEgAUhhokAC0IMEwEWhBgmAiwIMUwE
      WBBimAiwIMQwEWBBiGEiwIIQw0SABSGGiQALQgwTARaEGCYCLAgxTARYEGKYCLAgxDARYEGI
      YSLAghDDRIAFIYaJAAtCDBMBFoQYJgIsCDFMBFgQYpgIsCDEMBFgQYhhIsCCEMNEgAUhhokA
      C0IMEwEWhBgmAiwIMUwEWBBimAiwIMQwEWBBiGEiwIIQw0SABSGGiQALQgwTARaEGCYCLAgx
      TARYEGKYCLAgxDARYEGIYSLAghDDRIAFIYaJAAtCDBMBFoQYJgIsCDFMBFgQYpgIsCDEMBFg
      QYhhIsCCEMNEgAUhhokAC0IMEwEWhBgmAiwIMUwEWBBimP5OF0AQbjdNVSCigE5GkqQ7XZxb
      SgRYeNfQVAWCftRACC2kRw3pUcMGNMWMhhEJD7IphGwKI5siyBYLGM0xHWoRYCHmaKoKId/K
      oEZMaKSCLh4uhVLi8laukYaigOIDvAoobiTcMR1qEWDhrhUNqh8tEEQN6ZaDakSLGNHIA10c
      SFc149zM1izpQJ+CRsqKUMu4ka4OtdUChrsz1CLAwh2naSoE/WjBIGowGlQtbECNmNDIWa5R
      32ZQb8ZyqFVS4OpQO9zIkhvJeHWo40CWQdYhSXK0pr8DRICFd4ymacs1auByUNWIAS1sRCMb
      TZcQDcMlt3Lr1BtAVf7/du1suW0sv+P49wDgJlIStVq7KFueqeqbqZqruZjnmMs8S79OqvIS
      uU1VbpJOd9KWRMraSEncQBLbAXByAcot23JMdqTYmPw/VbJIS/wTMPH7nwX+HS+0wF4jZQ0M
      JAHgJ6jeePokBpOCSlEqBQuUrbJAWwZF9jOUyXqQZbLZvXr0GpX1DiwFlg2WykZ7ZU2fP2oU
      n57W/+bfRIinfAhqGJKGijQqZCOqLmB4NR1R7d9eML0KX3QQMymk6TMVUxhnBRzz8Vt8+mvz
      vp1JwSRg4uw7CUpl3zExkKJIQJmsEVgS4HywHDDf3/rLJAlEHibSmAjSuJitUSMHww7mcVAt
      oPQND/a516/P2hAes4Dih272oSl8+jzNvl40wCax0NcBqhihLAMqyaYMtkE5Ftg2ajo9wHbA
      cr7LjYJvLol4or+/OGMM6ACjI0wYY+ICqbYxsYPRNsaUshG1sPhxg3l4mAL8nmnrC7Dtr/9O
      Dr3sCJxa6OAtKil88gMz7WDRdGqgUcRABCQoy6Ds6TRBJdlawTZZM1dJ1ggsg3IU2M60CVhZ
      E7CdJ9cK+fZy4TWxzkIaalJtZeGMbVLtYJIChjVQVYxV/Li5Ps6DsrLPU/yf+0ZT6Omq3a58
      +JvHl6h5+ONx89ZPlDEppBqMBmIgRpE1BWVNR3qbaRPIQo9N9jMSlJWiHLLQ21Z2IX5oAvY3
      21l8Th+PogkmdrJRVBcw2ialCmxmn8Xjxvfo/unDU/H9efEAn95c8l+3fd4e7PDu/Iyj13/i
      h7UqP539J3dU+GG5xD+fd/jbn/80f3FlgV3i8eLKfPL9qzM4Y7JZQKrJukSM4uFx8tvIb003
      EKw0awqPlwSOQdl29l/1LCtbs9rOdOfwhS99AybJRtE01JjpKJrqbCR9GEWNqqKs4sdrQdkB
      yb0X/wiXKxXW1x3ebrxiOPb4Ya3KyL3lX697OKUC19cBIYYwgdK3WKYoBaoA1m/T/M9mA9MN
      gy97vCR4aAKPlwTptAn8D0sC22S3Hz4sCexs3WYXstrRwyhqSJNs9HwYTaGG+cooKiPo36cX
      D/BP11eUF9fw45CV+gapSUhKq/zDX//Cr/c9/ri5yS8315QKeV+3TsM29VkTeHjw8OSpmYEx
      WRNII7J9genywCpizEp2+8X6ZF5bfMZT+L1k4/GbUcYYA6ADTRLFz1o8dV3G//SPqMKnm1hi
      Lpb1Qrcsnsn3fnyQzWaSZ9wR/07OOe/DnhD/r0mAhcgxCbAQOSYBFiLHJMBC5JgEWIgckwAL
      kWMSYCFyTAIsRI5JgIXIMQmwEDkmARYixyTAQuSYBFiIHJMAC5FjEmAhckwCLESOSYCFyDEJ
      sBA5JgEWIsckwELkmARYiByTAAuRYxJgIXJMAixEjkmAhcgxCbAQOSYBFiLHJMBC5JgEWIgc
      kwALkWMSYCFyTAIsRI5JgIXIMedlq9tYa+so237Rt/m7Z1mQpt/6KL7sez8+AMuGNHnGet/H
      OStjjAHQgSaJ4m99PEKIOcgUWogckwALkWP2jz/++CNAGqeYJCWOPJqXbZYXCrw7PcUp1Whf
      nuHH4LldbvsjVpaXniyWaJ/TZpMEm/7dNeMwJZoMuekOWbBT3rUuqNdXsS0129EZw8VFi97I
      B+1xedujVrI4aZ5TW1rm/dkpi2trc3Wh/n2Hi+s25aLDWeucam2R960TcMp0O1d0Rz4rS4sz
      1ws8l7PWOXaxzM1li0QVcfsdeuOAOBhxcdNhebk+8zmbRNNsNfF1ymR4T2/ko2Kf85tbVup1
      2pfnWJUaRXv2s25fv6fdHVBQCa3LNuVyieb5BUtlm1+b5xRLC5SLhZnr3bYvubrtUbRSmpfX
      1BcXeHfyjlK1zn3nAi9KqS1UZq6XxgEnZ01iYzPs3jAOErTvcn3fx0pCPguotQAABKdJREFU
      Lq7ek1oVqpXibAWN4fKyRdf1ULHPRafLYsXh19Mm1VqN1tkpiXKoVsozH2O/2+Hi6oZyuchZ
      s8XC4hIX5yekdolu5wrX1ywvVmeuF/ojzlrnWMUS7atzYgqE43vG2iLxXc5vOtTrK3ztsvns
      KoiNhUlC2jc37B6+4ar572h7mf59h+EkxExGBF8qZpfY236FO+ySqDKhN8T1AhaV5qTT5+3h
      Fjed+5lPEmBnZxd/MqY/8tisGP6j1eG4sctNp4NKDPOu2pdXN6g4hrOLNseNXU7f/cLSxgGD
      3h3bO7v43niuesVyja31JTrXFyysbjMatvEjBaFHuVpDhwGhnmPzxLLZ29lmPB7iRwalfTqD
      MVuLZdr3d9ze9QjmqQdsbu2ShB6d3pDG+gL3920a6xVOru6J0wTDjA11an1zB6N92r0Bx6+q
      /MtPTY6O/8jd5c80r7poreeqp6wi+9uvGI36RKlD6I8YTnyWrBi7vkm1VKI2RzgAtnf28L0x
      vZHHVhX+7azN29eHXL0/ZRLFDN3hXPWWVzaolhQn5zccvz6gdfIzC6v7DO4uCEyB0XC+67pQ
      qrK9Uefu5ory0ibjYZdSscjY8+gOR2zXF+i53lfrfBbgcinrSls7e7Tfn6AqGyyoCZMoYW25
      SmfofnHrOg5HXNyNeH2wT6RDdByjY40faRxixpMJtjNjFwXAcHrW5Pj4mDjWTMKIkm0YTTxs
      p0SxMP/udvvqnNraLvWKzWjsYReKBP6EOEmy93pzPFe9yfCeQWhzuLtJ4Hvo2KB1RKRjjLJZ
      q5XwwtkvaBOHnF12OD46QscRkdaYROOFIWN3RBKH9AbzXXyt5gkHR29RacLID8ApMvJDakt1
      /nDUoN2+mqve+9YJe4fHWGnCyAuolm3GkzGpKrK6ukEwGWHmqJdEY1q3Q94c7hPrCK31R9eN
      n1hUnHmajOHs7JTjN29JYs0k0JQdw3gyQUch9fUddPClYehpnev3VOrbrFUdRuMJVqFE6E9I
      VInFosGdhHPV89wuXQ8ae68IAx8dp5RLJQDSWOMFAfYMd28+m0K7/XvGfoBTLBPFKa8bB0zG
      Iw4br0migPVXu1TLT4cwiWOG7oBUFVgq2SyubrK6uEDiVDjY2qQ79NjdWp+53xtjmIxdXC/g
      YGuTIC1ytLdFtz9ie32JO9cliVMWqwszVoQw9On1+2zv7eO6YxqNI8LJgK2tXQJvhOuFc02h
      4zhiMOhTrNaxE5+NrT1qJYtirY6VBIxji531VdSMJ52mCSN3SBgb1perFKt1ttbqjCM43N9j
      Y32T+tLi7MsQwJuM6LtjDvd2GAYpu+trDP2E3Y1lrq7bNBoNrFkPEPC9Md2By+HBHgMv4bhx
      QL97x/7ha4qEVOsbVOaYkidxjOsOiI3D0kKB2soG68tVYqvCUtmhurSCM8eSwZBdN4NJwOH2
      Jl5a4PXeNt3egKM3b/GGd2zt7FN0Zh8AwiC7brZ29nGHLo3GEdobsrm9S+hP2N1rUCrMflc2
      1prBsI9TWaZgQtY2t7m/u0XHmr2dHSaRYXP16aXqY3IbSYgck11oIXJMAixEjkmAhcix/wZ/
      rjeP3ggoHQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Most Improved Slums' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAW7ElEQVR4nO3a2Xeb953f8Tc2ggRBgvsqUtwkaqc2y5Fsy7I9nowzTtJJM+502pzpxfSP
      aHvjm17NnLno6U3bc6bL6dhJHCeO6yi2LFsyJYr7IoqkxH0RF5AECYAACIJYnl7IdezaiVZK
      +sWf1xVJPODzxcPzfp4HP9BmWZaFiBjJCWBlLDLpzJOeRUTukxMgk86QjG8/6VlE5D4577bB
      WnKZ1aT/cczyNfmOQqrctfe07czWGJFUeIcn+mZV7t0Uu8ruul0wGWAuMfkYJvo6ryOfxpz9
      d90uY2W4Ee16DBN9swO5J3DZXXfdbn5rmrXk8mOY6OvKsqqpdNfcdbtwMshwtG9HZ7lrwBup
      EPOJ6R0d4vepcKXuOeCV7UVWkks7PNE3y3cW3lPA0fQGM1tjj2Giryt2ld9TwGAx/YRmBGj2
      tODi7gEHkn5mtsYfw0Rf57K77yngzXSUW7HrOzqLfUd/u4jsKAUsYjAFLGIwBSxiMAUsYjAF
      LGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxi
      MAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAF
      LGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxi
      MAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMOfdNqh2
      11GWVfU4Zvkap+2u44l8q921kCy7myzcj2MWEblPuoUWMdhDBzw22M7bH1wAwMok+en/+C9M
      r0YBSCfjXPjVW3QPL5BOxvj1u2/x1nvnCfsn+Ke3/4mJ5SgDfd0k0tbDjiHyrfTQbzJLa/eR
      u3AFgPGBDnKKq9neTgGQsSz2HzzI3PoWobnrlLd8j4bNHn756RSv//gcbb9oJemO4fBVc6ix
      CttDzJFt95Brz3vYl/NAnDbXE9mvyIMFbFn0tl3EWb6Plj01AKQ3V3jnw6t43RlCjkKaq5/D
      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
      R/8IR04+T3YmhLe4lrxsJ0uTMxQ17MY/NsAtf4JXXniW1MYiQVspruisAhYxmRaxRAymgEUM
      poBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaA
      RQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUM
      poBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaA
      RQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUM
      poBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaA
      RQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUM
      poBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaA
      RQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUM
      poBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaA
      RQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQzm/PI3FtaTmkNEHsBXAsb2
      hKb4Y2QDnQ8fEROO5ROa0fn//8BmPd0VWzbAsrA9xWeb/3cn89QfSyywmTGnCTPeOZyPd86v
      vgd+2s9yYMaMoDkfJc34e30l4Hs9e1iWhX91FYBQIEBofYlgbPvRT/cNbNzbnLH1BSYXAgCs
      3p7g9srGfe7JYmVlhXQ8xGJw8z5ntN33mXh2apTodoatSIBwPMnigv+uz9kMrxOMbN3Xfr7s
      D86Z2uTSxx9xqa2LRDpzD7/NYsW/+o2PrK2vf/NTMinWQuF7mjOzvclqKAKkWfGvfeXxkH+R
      WOr3Pz+1tUk4dudvODHSy0effMrqRvyu+wWIhNbY/vzlR4NLxBIp5v0r3zjjPfeTSdPR+iGX
      rvWQzNxv+Rbra787ng+8Ct3b3YVlWXT3dmJlHNjtNoLLc3QNDBMOzPF3f/8P3BifI7A8T3dn
      B+F4ktWFSa6097CdAf/8JG1dfcxOjjAyNf/IT2DB+SEutN8AK033QCsjPTNE1ha52tlHMmOx
      snybzo5OookU0aCfq9faWA7GCK/Oc627n2QmTXdX953bdbudpdlRrnZfJ3XfB/ze3Bjupadv
      iLWZAcYDCbDbsDJJejuvMjJ5m0xqi+6OdgKRLSLhdeZmpthIJLHZbCzO3KK95zqpe+nsXiWW
      iOfUc6jC4sOO8Tv76L1OMp1meWGWzq5uNrfThFfnudLWwVokSndbL5lknI62VuZWQlipBD2d
      bZz/rJ1MaovernZWw3E2Agtc7egiHo/R2dvFtc5ekneZPRnx0zs2CyTobrtOeG2N4cEe5pZD
      WGkbiY0l/uM//B3Xx2eJrC3S0XudZNoiuDzLpxc+5Nb8neiGJmf4zokjtF6+SCadoLujjcDG
      FqE1/xfHN7S+TCoDq4FVZkd6aOvsZGk9yvytNpaigM1GJrVFV/tV1qKJ+z60mXSS5Y0NDtV6
      uHiln9XAKluRAItrG2yEAsSiYdqvXWFpPUJkPcDwjV5m/EEy6QQ9HVf56HI7yXiYtqutON58
      8803rYxFJpW+5wFsNhvWyhTBvEoCC6v4kgFWHLlc/NV7rPsniXl34dxOcOrkMS5/8huamhoY
      mV7AsR1hZqKP+UgxYzc7qckOMRwrZev2BDV7m77+hvwhbKzOEYvbyCn0EgqtQ9LH2HQ/B/dU
      0j44y+hwHwebyumbDTMxeIPmuiIGZpYYH5umucZH97ifTDxKbX6CtuVs3BtzTA5eIeBtpr7E
      8wgnvWN+dZ2cRIiU3SLtqWZ0sI+wf5y8mgPcbO9ibXmUmdUNugZu4QxP4beK8CSWWU3mshWY
      4+ZwLzHXLmrL8h7NQMkg775/Gb9/icPPfIfY8iTDfV0kCyoYvNZBQ00Z0/4VbtwcZ1+dj5Fb
      UVLxDepqChkam6SjexArtoKvdh/RjSAbs8OM+oN0DNwktjpDfmkNRXk59I+Mc7DayWgwj5o/
      cFzT8SAzwSRN1YWM35xnwz+Ou7aJscEhtqdvk3PkACuLS5w5cYxfv/O/2Vib53YUpqYXOVhf
      Sdzpobq4gP7eNhJJG5bLw+p4H9NrUTp7h0lvLlO75xAd19qJrE9SVH2Aq22f4HVkyK9ppqez
      nTJvGkdBHd03BgnODFPReJgcl4uc7Kz7OrRWJsWV1o+wuzzkF9UyeXOAzXiQobFFIgE/vsJc
      xiam6Bq8hTu0hFXVyPTwIOtLkxTuPsjm+hoVxbmMTs08+BV47zMn6Xjrv1Gy78TnU21jyynh
      5e++zuGGanI82eR6siku20V1RQUu2zY3Z1c5dKiZeCBMaUUV5UX5VO2qxefNedAx/qCGfXv4
      7L33qTtwCLDA4aS0tJx0IkZp1S52VVXgtFI4s3wUeHOw0kksVw6lJSUkk797S2BZFuPzS7Ts
      q2c1HN2RWQGOnWihv3fgi+83k1BTUYJlZYjFExw+dorX/+QFcvJLeeboAZx2G2xvMLa8yYHG
      WuKhRzvbqRe/x1/+6BWmbtxgcibCwT3lRGNxyqt2U1Vejj0TJzuvkHxPFpnPr6BD/YPU7T+M
      x5EilshQUVYCVobNWIKDR0/xw1fPcur0WWzhBW7OLlNdW0dlZTnc5QLidOcQC4dIRCOksrNw
      5RbRuLuavJw78dhd2Xiyc/B6srAcuTz/8uuc3O3DkVeMNycL6/MbJ7cnj9TGKrmFFYQ2E7Qc
      e4bvv3oWtyePsuJCXA4HlgXJxCaRWAKX20NZaQku51dTSaQtykpLyc12PdCxLSwuY3Zmgarq
      Eoq8bhbCNqq8CSJ4mBsZorb5EHZrm6zsAurra/F6nES3LarLi8HKMDA0RPOBww92BQawOTxs
      xBOcPLwXp8NBTn45FbkJBsfmqavfQ3Z6nelAktrKEny+AhxZbrLTUZY3Heypq6O0NI+CgkLc
      uUX4PC7yfL5H+l8lNpsdb1EVdoeNA/U1OF057Cpx0do9ytlz5/C4nRT4fNideWRnlunqH8JZ
      0sixKjfXBqc5e+Y0ue4sioqLcWXnk721Sjjjpb6+ntK87Ec46R12u53i0iqcVpqKXXXk52TR
      VF3Cx5eusBZN8uevvcxAbzduXzlVpYV48wpwOezk5BVBdIkNK5em+t0U5D+qk6GNnmuXmF6K
      cubsGazI5/toaKQoLxefLx+XJx/CS/SO3CTHV8ee+lLq6iro6R+mYU8zLfsb+Kz1GhW1DRxv
      OcBgXw9Z+WU4E+tM+KMcbzlMbrabgrw8nFm55Of+/hjsLi/O2BLXBiZ57uxz5OW48frycdkd
      FBQVkl9SRE58jfHVbY40lNI3PElN8xHckVnG/DGaGhvI92TjzMrm2MnTxAML7Dt8hMHuTtwF
      FUSXx7h+a5YTp1+guiiPa10D1NY1UFWST/u1Lg6dOE2Jz0tufgm52S4O723g8qVL5JXXku+5
      vyswgMebzwtnnmNmZpZ9dRUknAXUlWSTW9pEVYmH4ZtTNOzZQ01VBbk+H1l2O3trK7l4uY2K
      uiaaa0rpH5nEZlmWlU6mScYfzyLU02i4t5UJf5yz585RmOt+0uN8Ibw8wyftfTS3nOZAfeXT
      98GZlWag8wpzwSTnXn6ZfLfjSU/0wG7fnqGqug6HYf+bqIBFDPYo141Enqh4NEw0aaPIm8WS
      f4UMkJtfRLHP+0C/bysew+n23FlreEoZdsMg8mUWm9Ewa6EI6eQWv/z5T5mYXyaTSuCfu8E7
      /6eVcGSTaDjIWjBMJpMmFosQWAuSTidZ9vtZWQuS2t5ieWWF7VSG7cQWwbUAm4kkscg6yXSG
      UDBAKBJ70i/2G+kKLMZKxoN88JuL5LvTlB08zcL6Bi2ebFw5Pk4eP8pifJWGXYV0XL7M2PwC
      p8+c5WpHO+U5GepOfY+10T76pjZ445UjdA2NYs8tw7s1R9pbRWwrTZV7nZqW1xjp6eT2fIAf
      /Ou/ofDBFp13jK7AYqzk5hrFu1o499whVoN29u87yIHGmq9sk46uMReM4UhtEQjFaD54nDNH
      m4lnsrAsO3/zkzeYnJzE4/GytLyA11fOc8+9SMHnH0lH1v2EYmlS8XnC9/cPeY+FrsBirJzC
      epyb5/ngqp3Xvv/njA0Ff7dS7/Cwq7IQW5YXjzNNsrCckqICsDtw5bjJDi7QPb1A2NZOY6GP
      ieUYdTW1FJfm47BBeVkFWRkv3jwv9kyS4soG/sCnXE+MVqFFDPZ/Ac3ZBdABdUPbAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Story 1' width='240'>
      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
      6K6DIR0M6WIAptAJSpcwgpBmEtKMQiA1NG0LTAppOjiqAm+mTQuwlBJni3WvVqvaati8k9nl
      WoVbDZomZeHLRZeFoEmJIcCQXtgM18FErgXQRGAgCUi8x4TAFDqG0NABXYCGhiYEGgIhBDdc
      BnP9yfY37aLKrdNtdbfeVUh3O190ob1wrVa1wnWXq9XNtQtVzatkGhIhZWGs53phE6BLMJHo
      0r2m0pkITMCUXvhWK5opdC9ogCYEuhBoaN6dFG7Wk/jxdC6ULWTzKrBrYedWENL1qhpsqGru
      hqomMKT0uo2Fx0wBxmrQKIRNiPWqhkBHFKqad6hFYHy76zr9QGhbp9oqW8KmBfiRXJKD2QS6
      8MKmCS9oGhqCQlVbneG/u2b6byPVRVWutWkBDgmNkG7e5Cc/zHHNu9JddgxT+f42dQw8N7+E
      pQUYHp1FBoM8srOGXC7H2GKWIlNyZXyJhrpKWiuim9ksRfGtTRslSsema3SW6dk8D+6txyh0
      B9NZi4mZFSrLS9heGcU0fDGvpihbwqalZXJqkeWszXw6QTyQobmxEoDS4ihBYwkpJSNLeR6u
      VScVKMo3tWkBrquvpDqwneWUxHYtKiMG88tpkskUK5k8C6k8OxrKN6s5inJX2NT+qq6blBUB
      eOfVlhdHKC+OsK2+cjOboSh3jbvtSKmi/KioACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQAr
      io+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kA
      K4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+p
      ACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qP
      qQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACuK
      j6kAK4qPqQArio+pACuKj6kAK4qPqQArio+pACs/GlJKpG0hXedON+W2Me50AxTltpMS6dhI
      K4fM2si8hps3cS0D6UYAC83MogXzaEEXLWxCIITQ9Dvd8m9NBVjxr0JQsXK4q0G1TNy8F1RJ
      JWghQAchQHjfAjguOGkJKQfcFEIkfBlqFWBly5NSgmtDPo+bs9Yrat5AuuG1oEp0xHVBvSUh
      QBigFSMpXg912oE5f4RaBVjZOqT0xqdWDje7GlRjQ0WtAC3MzSoqeH/83oQADDC+aagDYAa9
      FxeatwPZRCrAyh2x3vXdEFTLQDphJOW3DOr3ousg5Xf5i6AHkJTiAE4OyDqwmEKQAWkhpAti
      9UsidIHQKITbe1wIWfhZ4XEN7zEkaBKhCdAEaBpC0wr/fgFCW//StLWdlQqw8oOSjldRZS6P
      m9dwczrSMnGdEFKWgR5GYqxXrs3onbrubdqQABFDGqUgXW66W/i6l5KF8F7/JR2QNkI63kaE
      ixCF71l/TAXYVwTerntrkQB2HuwcMpvFtXXkhorqynLQIt54E7yDlxsOYG5qp1PTwLnNh5Ec
      +ztW9esJ1t8NHQggN7w5N7yE3MQK7Cw7uNMrCJ1Ct8L1ug+6AN0odB007wOq6V73QbmOe5s+
      KN+edB2w80jLQuYl0ha4lo60DaRlIGUYKSIggiBMromloFBY7kzbryG2QBtuo00LsJ2twknv
      We8ySLfwZkpwLZAWYHvdBGEjsEE4CF16gddcBA7oEqHL9bGDJgs7AR2hr48R0HSEKIwh7hby
      dnX9brJpKb2A2hYyZyNtDZkXSMf0giqDSDdWqKQmkg0TNqv7Wk3b0D3dqkHZqu36bja/Cy0K
      3QSxocLqgbVv5XX/x+XGccQN4wYXpO3tCK7fCWB7gdclQpOAg9Bcryeqg1ibcAB0DaEb3iSC
      8HYC3o7g7tgJSGdDFbVcpOVNHknbQDomUhYhiYAWLAS08Dta7dndqW6v8pU2LcBWLs3x3h50
      3USzLUYSGf7dgf3YVpbnTp7l7x59mA/Ofs72nY/QEvuaZomNY4XVxwJrH7AbdgISsK/bxlp3
      zuXaiQOvN+DtBBwE3k4BzV3vDQjH+7m+OtMobz0k0PX1MPyA1qqoZSHzq1VUQzqGV0XdIFIW
      bRiPbuihXNc8FVB/2LQAm4EwcVOnrLSSYpGjqFQHJMeudGHoglO9V0jagplEkpZYyQ/fILFx
      smD1MRMIATfZCYA3+Xf9/Ifc0AtY3RG4ea9H8I2HBHhDgY07AaMwD7BhSIDQvAkT20Lm80hL
      4FoCaZtIS8d1TJDFSBEGLYi3sQ1VdOvNfynf06YFeHlpir6VPPeVSEZSOfY0NLCQTPHw7n1c
      Gh9jb30jtcWT5KNR7wPrZ3po7dub7gg2DgvsDc+UG3cC1obewOrOQHonNIgI6BG8MUDhvbpu
      ZveOuGYMrGwGIeW1U4NSSnKJ7G1/ofTHH+KMjd727f6obPWAbPX2gXcix+0+jCTEHZthv9P7
      bEVRvgcVYEXxMRVgRfExFWBF8TEVYEXxMRVgRfExFWBF8TEVYEXxMRVgRfExFWBF8TEVYEXx
      MRVgRfGx/w/jiBm5YKz5UwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Urban Population' width='240'>
      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
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPA
      IhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIW
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPA
      IhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIW
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPA
      IhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIW
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPA
      IhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIW
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPA
      IhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIW
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPA
      IhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIW
      U8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZTwCIWU8AiFlPAIhZLffETBnMZj0NE
      3sLlzsDON2BMHaPG+wrHPDUDOxf4aA9n+4se8yLHixyDYy7uGHVOz99FH9+bjHlyBr7o1fNl
      rNYveEwnutjxgK/9z/HCz+k7/Dw9MQNf9KvMRY93GWN+3ce7jDG/7uO9yZin3gMbYwjDEIAw
      DPCDAIwhDHyCIARjCAKfoPc1r8tEEZ7nERlDFIb4QYAxh2OEQG+MN/x7/+R4xuD7HkEYHn0c
      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
    </thumbnail>
    <thumbnail height='240' name='Urban Population Map' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Urban Population Top' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARVUlEQVR4nO3dSXdUZ37H8e+tSaVZlEAICRASAiMGIyYbG4MZmh5ouj10O8Mmi+yyyyrb
      vIScrJIXkHOyyDlxD26bmNHuxpjB2G4QCAGa56lU83Dr3puFaNxu2gaBVMWDfh82SHXrPn9d
      6Vt1S1WSLM/zPETESAEAz/VwHbfUs4jIAgUAXMfFzuRLPYuILJDvz9/w0Nm0iEm+FTBWiaYQ
      kafie/wmIvK8UsAiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZT
      wCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8Ai
      BlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZT
      wCIGC5R6AJHlbLDnKy7fuEcsa/PODw9z6fPPCa/cwNHXduEDer74Pdf7J2jr2M0qK8oX3f2s
      bd/J/h3tgO6B5QXW0/UFlz6/RNe9AfKZOF9+9RWpXOHh5a6dZWxyBoCRvm6ufn0T2/GKOuP6
      zZ289+5brI3Uc6/nj+w5dIJweoDRWB6Am/f7admwka0b19O8cQc/+9ExRu71PLy+ApYXVn1D
      E2vqK7jV08cn585QWRngw4/PA+A5BT77/TnOXb4MeKTzBSLBOT7+Q3fR5xzqukbj1j20Na/j
      k9O/4UbvCNn8/A3NseM/Yc2KMj48dQ4rN8f/fvAR5ZH6h9dVwPLCql+1hvjsDK++ug/Xc0jn
      PKKxcQAsf4DXDx2jJuwHLEKWzYWLN9m0ubm4Q3oON4fm2L4uQuWKVXRs2kRzYwuN1Raz8RiD
      fb1EY3ECwSD9w+Ns69hKdHL44dUVsLyw3Hyc4ZiftfWVHDh4hDKfQ21V/V/ZskBkzRb+5t3j
      3P7qZtHnfOONQwR8FmUV1VRXVfHmseNUBHz4rADtmzdTVdPAieOHaGpqpqysnJMnTj68ruV5
      nufYDnYmj2d5WJ5V9A9AzGLnUoyMTeJhsXJlPbPT07hYrGxooroiBJ7D2OgotSvXUBHyMTE+
      SmVdA1XloaLOGZ8YIhFcQXOkiqG7X3Ote5D9B44Qyk3iVa7i2oWPGImmeOWNw8z13mIq4/Dq
      gaM011cVdc5noYBlwXKpObq679F3+zqt+3+KFRtj9N516nb/ggOb6um6eo6xXJj4bJwdbTXc
      nbTJxBL8/O2TBJfRl5eXnsEbubyka+hpJFmwsso6dnVuZ2I6Rmd7M5a7mvGpGV7bNH96OpnM
      cfjNI1z5wymGJuMcfONH3P/iFLEsrCxfnBk8OwWF/OLsbKECYazg4z8Qb64P59N/XdpRlnTv
      8sIauftHGtu34wNmhrqoXbvl4TdUXMchV3BJpwuEyoNkcjaJRIHgIn61uVf+Hbf7/cXb4QL4
      dv4j/r3/VJK1/5K+iSVPwSOaC7GjbTXgMT7nsW9bC3gud+/18trul/nwt+9Ts7aDVzo7uXjm
      N1irNlIbLPXcLx7dA8tTsNixs/Ph/7c9/L+PTe1tALz3i/UPt37nnV8Wd7xlRPfAIgbTPbB8
      i+cWcH79DyVb3/+T/8AK15ZsfdMo4OdM352vuTs0ia8ywpud7Xx+5Rqr23awaV0DFjDS20VX
      7yitHbtYU2Fz7WYvu/e+Qk35Ij3A9Dy82buLs6+nWt8p3doG0in0c2bN+nZe2bOL6MQwqWSa
      zdt38eWV8+RsF4Cu7gH27NvHulU1nD53ni2bmjh9+mKJp5ZSUcDPmXB5JfmZAVo6XqV25Uq+
      vPAhWauGUGD+FRCV5S5n/+93XLnZT6QixNlzn1K3ZnWJp5ZSUcDPGc8tcO3uFHs2N5JMpDj2
      9t8T8ZLE8w7g0N7xCm+dPM7M8D2m40F++e67REd6HrtfeTHpMfBzxrGzbNm2E78FdjrKuXNn
      WdHSQVl2moF4OdmJXj67OsPrh46Qnezho4/Ps/uVg6UeW0pEAT9nAmVVtK2ffzF9pLGVt95u
      fXhZC8Cq/by088E76jpp2dz5yD5k+VDAReTZacjMlmbxQBlWxarSrC1LRgEXkdd/Yclf3P5d
      rMY9BH76nyVZW5aOvoklYrBlFXAuOcPvPvg1g1MJpkfu89uPPiaWmf+RNLeQ47MLpzj1ySXy
      js1nZz/kf95/n7FYrsRTi3y3ZROw53l8fOYCrx06yooKP5eufc3R17dz+uynALiuS8fuA7TX
      5vnyRi8zVhU/O/FTGmvLSjy5yHdbNgHjuYxMDHDl4nnOXPoSv5Pg1CdfMBObBiAQKmeo+wqn
      LnWzoXUttST54Ff/zR97Z0o8uMh3WzYBW5aPuurVHDxyDCuf5sCxtzm+fxstzfM//pZNx2je
      tJ93ju7ixs3brG/fy/6dbUSnkyWeXOS7LU7AnsP1Sxe41TfGvZtX+eDDDzjzyRXsbzag5+bX
      pB1ITA9x7uI1XK+4v0AbC95968ecP/MJbx4+TGyil4tdYxw9uJfRoXsUvCC3vvqUrkl4c/8u
      EhPddM9Wcmjf+sfvW6REFuVppOufnaVifScN1WXUrN1Jc2uaU+c/x//g8uhwN6dPnebkhq1c
      u3iVg52tnL3UzfHXOxZj+SdkEaqs5+TJEwCs2LyL9ZvnL2laN/9nKg4e+cnDrXfsO8SOIk4n
      8jQWJeD+ngGsmRTXnTLee/sEM/e/om3rbnyAY6e52j3OgV2bcQoFIpEIDS2dWPdPAYsXsBcf
      xsuX5nTXqmrECteVZG1Z3hYl4BWNETbv/yHdn5/Ddmy6+mY5+qN9ANiZOLGZCW7e+ZoNoRas
      WIL0bD8F3+L+BI1z+d/whj5b1H0+Kd/r/4J/yzslWVuWt0UJ+I3DP+D8+XM0bdlDyE7y0s59
      BH0WyZlx4lY17/3t3zE9uI/QmjZSwwHOXO7lB8ePLMbS3/Ac8AqP324peG5p1pVlb1ECDpbX
      8sMTP3v49oYHvzK3qr6RP/2O+5XrNwJQ07qNn7duW4xlRZa9xwbsuQVw7MdttjR8fix/cf8c
      h4hJHhuwe+dXuDf+qxizPMLXchj/q/9ckrVFTPD4U+hcAhIjRRjlUV6pfvROxBDL5pVYIi8i
      BSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUs
      YjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIw
      BSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUs
      YjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIw
      BSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUs
      YjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIw
      BSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUs
      YjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIw
      BSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUs
      YjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIw
      BSxiMAUsYjAFLGIwBSxiMAUsYjAFLGIwBSxisMBfvsPD+/Y7/AEIhIs1z1+sHXp0nu/ZtmRz
      +gJPNqfPX7oZAws4lqWa8YEnO5Yl/Hz7n/Tz7VvyGS3P8zzHdrAzeTzrCT/B8ngWPGkv8hgm
      HMsSzfjIPbDlWcWfYgE8C/A8LJ7fOf906/zcH0s8sMyY04QZ5w9ncef89mPg5/1WDsyYETTn
      YtKM3+lbAS/01iMVm+ZW922mY6kFXW96bIy893QfscXT38ol56a4dfsWo9Nzf/14uwWiscRT
      7fvPWQ/+LZzH1PgY9hMcGicbZyKafIo1vvH0c87LpZPYLtjZJNnCN+9PxebIuTbJZBYoEI0+
      2zF92hldO8vETBRwSCYzROeizzTH9/n+Y+kyPjqGA7h2htGJmUe2SM5MEc/bC173kVPohRiZ
      nKZlfQv37naTW7Wa+tpq+iZjNFYHKHgWQyOjrFnfSmxsiEy+QFvHDib6uhgYibK/tpJbd+9T
      s7KJtubVzzLGExuemKZ1wwZu3b5FdaiN3r4BVja1kpzsI2VbtG/aRDZn03fvFrFUlqaWLTTU
      VRRlNpj/ghsY6CHlq6LSnmE0GqOqrpEaX5rhqVlWNbWTmx0kbvt5aW2ERCZAdnaI2bTD1q3b
      KPMX9/QtOj5EeG0H1uwQiao2Yv23sCojrK4O4+ZnuHy1n72vdeLlSvNkRyE9y43uISr3bmd4
      ZIraujC51Bxdd3sJV9XTWONnYHSK1s0vMdXfi7+2gbbmhqWYhP57t3HDdRC9z52oR8BJMDw+
      y8atLxMdvsPw4BStu15m4M4AZTUNNNUE6BkYoSbSRAUJxmfTbNrczv07t6lr3EC5E2NkOvOM
      TyPZGa5/cRUvXIfPztA/NkE6HmN8JoYfBzybgaERHCvMlrYGJgZ7cStbaF+3Bsex8YDBwUHc
      xTlKj1fIcKu7GytUyWBvD9mCy8jYKAUrSHvzauLJGHOJFBnbZevml4jNTRVrMgBi00MUgnWM
      jw6STGRo79hBLhVlMpZi55YW4lOjpEMNtNZXMhFLAh6FgkMqNsFULFfUWQGcQpYbN67Tdbcf
      HIeC6zEwNEgqFqMispL2jR00rigjtsAztMW0bm0Tw8MjAMzF5hgaHqVjx8v4Cml6eu7iunlG
      x8eZimXZ0LRqyeaoiTSSmB0lXvBTF7IoFArgJRno7yfp1NDR3gJuAdeFocFBBsen2fHyVux0
      mkLBIZ+LMjI+i0uAcDDAZDxD58tbnzHgUCV7d++EXJq6SA1DozOsqQ+SyAWYmZqmurYOn+fh
      9wewLAtfqILE9CBjU7PMTE0Rrqoh6CvivYYvQCQSoZDPEC6voLK6ljUNK/H7/fisb76N6Hvw
      dnHvzzwmYjZb2jdQ4XOw8eH3zZ+WufkMfQODFALlZKOjDIxPUx4KQSHLbDJPTXUVnuMUdVoA
      fyDMjh272bZpA/nEFFlfFeGg/8GlQWKzI8RSxb9h+XOBshqqfFnmMvPn+OUhi77ePqKpHBUV
      ldRFGli1oppIZOWDr4Gl4QuGcTIzBCtqAY+pmTnqVtTieQGy8QmGxyaZi87gK6skHPAT8Ln0
      9fWTzKaZjqaoq6kBF6qrKhgcHgY7Q2/f4LefRloo27YJBAIU7DxWIEg+lyMcDJB3IWi5JDN5
      ysNhLAsCfouC68POJil4fqoqy4jHU4TLyykrCxUlFjuXIZ7KEC6vpKIsQCwep6y8ioDPw+/z
      4+LhumDhzn9cjksw8EyPMhbAI5+3CYVCFOw8jmcRCgawCwWmxwaYnJ6kqmk762r95ByL6ooy
      Ci7YuTSu5SdcFibgL+6pqmPnsQIhcPK4vgDpRIxAWQUhvw9fIEA2lcAXCuO3fASDxTqO3/Dc
      AgXPhx+HnO3h91vkklH6hkexrQo6t2wglkhRXVMDrreEM3rYdgHLc/D8IVyngOUWyDkeZaEy
      XDtLrgCVlWFSyRShcJhMbIqh8Ql85avY1BzBxkc4GCKTThAMVxHyucTTuWcLWIojm06QzDpE
      VtQu6b3EcuAUckTnElTXrqDs4dnC88fOZ5iLp6lbsYLg99wwK2ARg+m10CIGU8AiBlPAIgZT
      wCIGU8AiBlPAIgb7f7HkAm1va5otAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
